{"version":3,"sources":["Components/Dialogs/MessageItem/Message.module.css","Assets/Images/avatar.jpg","Assets/Images/loader.gif","Components/Profile/MyPosts/Post/Post.module.css","Components/Navbar/Navbar.module.css","serviceWorker.ts","Components/Navbar/Navbar.tsx","Components/Music/Music.tsx","Components/News/News.tsx","Components/Settings/Settings.tsx","Redux/messageReducer.ts","Components/Dialogs/DialogItem/DialogItem.tsx","Components/Dialogs/MessageItem/Message.tsx","Components/Common/FormControls/FormControls.tsx","Utils/Validation/validators.ts","Components/Dialogs/AddMessageForm.tsx","Components/Dialogs/Dialogs.tsx","HOC/withAuthRedirect.tsx","Components/Dialogs/DialogsContainer.tsx","API/api.ts","Redux/usersReducer.ts","Components/Users/Users.tsx","Components/Common/Preloader/Preloader.tsx","Components/Users/UsersContainer.tsx","Components/Profile/ProfileInfo/ProfileStatus.tsx","Components/Profile/ProfileInfo/ProfileInfo.tsx","Redux/profileReducer.ts","Components/Profile/MyPosts/Post/Post.tsx","Components/Profile/MyPosts/AddPostForm.tsx","Components/Profile/MyPosts/MyPosts.tsx","Components/Profile/MyPosts/MyPostsContainer.tsx","Components/Profile/Profile.tsx","Components/Profile/ProfileContainer.tsx","Components/Header/Header.tsx","Redux/authReducer.ts","Components/Header/HeaderContainer.tsx","Components/Login/LoginForm.tsx","Components/Login/Login.tsx","Components/Friends/Friends.tsx","Redux/appReducer.ts","App.tsx","Redux/friendsReducer.ts","Redux/reduxStore.ts","index.tsx","Components/Users/Users.module.css","Components/Common/FormControls/FormControls.module.css","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Dialogs/Dialogs.module.css","Components/Friends/Friends.module.css","Components/Dialogs/DialogItem/DialogItem.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Header/Header.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","Navbar","props","className","s","nav","item","to","activeClassName","activeLink","Music","News","Settings","initialState","dialogsData","id","name","messagesDataLeft","message","messagesDataRight","newMessageText","messageReducer","state","action","type","newMessage","newMessageBody","DialogItem","dialog","active","src","Message","Textarea","input","meta","hasError","touched","error","formControl","Input","requiredField","value","maxLength","length","maxLength20","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","validate","Dialogs","dialogElements","messages","map","d","key","messageElementsLeft","m","messageElementsRight","dialogs","dialogsItems","messagesRow","messagesCell1","values","addMessage","messagesCell2","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","React","connect","compose","messagesPage","dispatch","addMessageActionCreator","axiosInstance","axios","create","withCredentials","baseURL","headers","userApi","currentPage","pageSize","get","then","response","data","userId","post","delete","console","log","profileApi","getProfile","getStatus","updateStatus","status","put","loginApi","users","totalUsersCount","isFetching","isFollowStatusChanging","setUsers","toggleIsFetching","toggleFollowStatusChanging","usersReducer","u","followed","totalUsersQuantity","filter","Users","pagesNumber","Math","ceil","pages","i","push","pagination","p","index","selectedPage","style","cursor","onClick","onPaginationClickHandler","userContainer","imageAndButtonContainer","photos","small","avatarLogo","usersPhoto","button","disabled","some","unFollow","follow","userInformation","Preloader","width","margin","loader","height","UsersContainer","pageNumber","getUsers","toggleIsFollowStatusChanging","usersPage","resultCode","followSuccess","setCurrentPage","items","totalCount","unFollowSuccess","ProfileStatus","editMode","onStatusChange","e","setState","currentTarget","activateEditMode","activateViewMode","update","prevProps","prevState","snapshot","description","onDoubleClick","TextField","variant","onChange","autoFocus","onBlur","ProfileInfo","profile","alt","fullName","contacts","facebook","postsData","likesCount","setUserStatus","profileReducer","newPost","addNewPost","Post","maxLength10","AddPostReduxForm","MyPosts","postElements","posts","main","addPost","MyPostsContainer","profilePage","addPostActionCreator","Profile","ProfileContainer","params","authorisedId","history","getUserProfile","getUserStatus","content","updateUserStatus","withRouter","Header","header","loginBlock","login","logout","email","setUserData","payload","checkAuth","authReducer","HeaderContainer","maxLength50","LoginReduxForm","display","formSummaryError","password","rememberMe","formErrorMessage","stopSubmit","_error","formData","Friends","friendsElements","friends","f","friend","imgSource","friendName","initialised","appReducer","App","initialiseApp","path","render","DialogsContainer","gridArea","backgroundColor","stateForFriends","app","checkAuthResult","Promise","all","friendsReducer","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a431cc70.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3K1h0\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.64830c49.jpg\";","module.exports = __webpack_public_path__ + \"static/media/loader.181849d9.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3YEHT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__7zjwi\",\"item\":\"Navbar_item__2dKJe\",\"activeLink\":\"Navbar_activeLink__3dRIm\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype propsType = {\r\n\r\n}\r\nfunction Navbar(props: propsType) {\r\n    return (\r\n        <div className={s.nav}>\r\n            <nav>\r\n                <div className={s.item}>\r\n                    <NavLink to={\"/profile\"} activeClassName={s.activeLink}> Profile </NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={\"/dialogs\"} activeClassName={s.activeLink}> Messages</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={\"/users\"} activeClassName={s.activeLink}> Users</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={\"/news\"} activeClassName={s.activeLink}> News</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={\"/music\"} activeClassName={s.activeLink}> Music</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={\"/settings\"} activeClassName={s.activeLink}> Settings</NavLink>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\n\r\nfunction Music() {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\n\r\nfunction News() {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\n\r\nfunction Settings() {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings","import {messagesPageType} from \"./Types\";\r\n\r\nconst addMessage = \"ADD-MESSAGE\";\r\n\r\nexport const addMessageActionCreator = (newMessageBody: string) => {return {type: addMessage, newMessageBody}}\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        {id: 1, name: \"Arsen\"},\r\n        {id: 2, name: \"Olya\"},\r\n        {id: 3, name: \"Tigran\"},\r\n        {id: 4, name: \"David\"},\r\n    ],\r\n    messagesDataLeft: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"How are you\"},\r\n        {id: 3, message: \"Hello world\"},\r\n        {id: 4, message: \"Lorem ipsum\"},\r\n    ],\r\n    messagesDataRight: [\r\n        {id: 1, message: \"I love my wife\"},\r\n        {id: 2, message: \"fg gfdgsdfg g fd\"},\r\n        {id: 3, message: \"fg dfgdf dfg \"},\r\n        {id: 4, message: \" fd sgdf dfg df \"},\r\n    ],\r\n    newMessageText: \"\",\r\n}\r\n\r\nconst messageReducer = (state: messagesPageType = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case addMessage:\r\n            let newMessage = {id: 5, message: action.newMessageBody,}\r\n            return {\r\n                ...state,\r\n                messagesDataLeft: [...state.messagesDataLeft, newMessage],\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default messageReducer;\r\n","import React from 'react';\r\nimport s from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype DialogItem = {\r\n    name: string,\r\n    id: number\r\n}\r\n\r\nfunction DialogItem(props: DialogItem) {\r\n    return (\r\n        <div className={`${s.dialog} ${s.active}`}>\r\n            <img src={\"https://greendestinations.org/wp-content/uploads/2019/05/avatar-exemple.jpg\"}/>\r\n            <NavLink to={'/dialogs/' + props.id}> {props.name} </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from 'react';\r\nimport s from './Message.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\ntype propsMessage = {\r\n    message: string\r\n}\r\n\r\nfunction Message(props: propsMessage) {\r\n    return (\r\n            <div className={s.message}>\r\n                {props.message}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from \"react\";\r\nimport s from \"./FormControls.module.css\"\r\n\r\ntype propsType = {}\r\n\r\n// @ts-ignore\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n            <div>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            {hasError &&  <span>{meta.error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\n// @ts-ignore\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            {hasError &&  <span>{meta.error}</span> }\r\n        </div>\r\n    )\r\n}","export const requiredField = (value: string) => {\r\n    if(value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLength = (maxLength: number) => (value: string) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import React from 'react';\r\nimport {Field, reduxForm, SubmitHandler} from \"redux-form\";\r\nimport {Textarea} from \"../Common/FormControls/FormControls\";\r\nimport {maxLength, requiredField} from \"../../Utils/Validation/validators\";\r\n\r\ntype propsType = {\r\n    handleSubmit: SubmitHandler;\r\n}\r\n\r\nconst maxLength20 = maxLength(20);\r\n\r\nfunction AddMessageForm(props: propsType) {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={\"newMessageBody\"} placeholder={\"Enter your message here\"}\r\n                       validate={[requiredField, maxLength20]}/>\r\n            </div>\r\n            <div>\r\n                <button> Add message </button>\r\n            </div>\r\n\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nexport const AddMessageReduxForm = reduxForm({\r\n    form: 'AddMessage'\r\n})(AddMessageForm)","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./MessageItem/Message\";\r\nimport {messagesPageType} from \"../../Redux/Types\";\r\nimport {AddMessageReduxForm} from \"./AddMessageForm\";\r\n\r\ntype propsType = {\r\n    messages: messagesPageType,\r\n    newMessageText: string,\r\n    updateNewMessageText: (newMessage: string) => void,\r\n    addMessage: (newMessageBody: string) => void,\r\n}\r\n\r\nfunction Dialogs(props: propsType) {\r\n    let dialogElements = props.messages.dialogsData.map((d: { name: string; id: number; }) => <DialogItem name={d.name}\r\n                                                                                                          id={d.id} key={d.id}/>)\r\n    let messageElementsLeft = props.messages.messagesDataLeft.map((m: { message: string; }) => <Message message={m.message}/>)\r\n    let messageElementsRight = props.messages.messagesDataRight.map((m: { message: string; }) => <Message message={m.message}/>)\r\n\r\n    const addMessage = (newMessageBody: string) => {\r\n        props.addMessage(newMessageBody)\r\n    }\r\n\r\n    const onSubmit = (values: any) => {\r\n        addMessage(values.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div className={s.messagesRow}>\r\n                    <div className={s.messagesCell1}>\r\n                        {messageElementsLeft}\r\n                        <AddMessageReduxForm onSubmit={onSubmit}/>\r\n                    </div>\r\n                    <div className={s.messagesCell2}>\r\n                        {messageElementsRight}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {_stateType} from \"../Redux/Types\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToPropsForRedirect = (state: _stateType) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component: any) => {\r\n    class RedirectComponent extends React.Component<any, any> {\r\n        render() {\r\n            if(!this.props.isAuth) {return <Redirect to={\"/login\"}/>};\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}","import React from 'react';\r\nimport {addMessageActionCreator} from \"../../Redux/messageReducer\";\r\nimport { _stateType} from \"../../Redux/Types\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state: _stateType) => {\r\n    return {\r\n        messages: state.messagesPage,\r\n        newMessageText: state.messagesPage.newMessageText,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        addMessage: (newMessageBody: string) => {\r\n            dispatch ( addMessageActionCreator(newMessageBody) )\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n)(Dialogs)","import axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"a318ecb3-f5df-4512-99ed-aabe354d9b6f\"\r\n    },\r\n})\r\n\r\nexport const userApi = {\r\n    getUsers (currentPage: number = 1, pageSize: number = 100) {\r\n        return axiosInstance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    checkAuth () {\r\n        return axiosInstance.get('auth/me')\r\n            .then(response => response.data)\r\n    },\r\n    follow (userId: number) {\r\n        return axiosInstance.post(`follow/${userId}`, {})\r\n            .then(response => response.data)\r\n    },\r\n    unFollow (userId: number) {\r\n        return axiosInstance.delete(`follow/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    getProfile (userId: number) {\r\n        console.log(\"Obsolete method. Please use profileApi\")\r\n        return profileApi.getProfile(userId)\r\n    },\r\n}\r\n\r\nexport const profileApi = {\r\n    getProfile (userId: number) {\r\n        return axiosInstance.get(`profile/${userId}`)\r\n    },\r\n    getStatus (userId: number) {\r\n        return axiosInstance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus (status: string) {\r\n        return axiosInstance.put(\"profile/status\", {status: status})\r\n    }\r\n}\r\n\r\nexport const loginApi = {\r\n    signIn (data: {email: string, password: string|number, rememberMe?: boolean, captcha?: boolean} ) {\r\n        return axiosInstance.post(\"auth/login\", data)\r\n    },\r\n    signOut () {\r\n        return axiosInstance.delete(\"auth/login\")\r\n    }\r\n}\r\n\r\n\r\n","import {usersPageType, usersType} from \"./Types\";\r\nimport {userApi} from \"../API/api\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_QUANTITY = \"SET_TOTAL_USERS_QUANTITY\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_FOLLOW_STATUS_CHANGING = \"TOGGLE_FOLLOW_STATUS_CHANGING\";\r\n\r\nlet initialState: usersPageType = {\r\n    users: [],\r\n    pageSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    isFollowStatusChanging: [],\r\n}\r\n\r\n\r\nconst usersReducer = (state: usersPageType = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage,\r\n            }\r\n\r\n        case SET_TOTAL_USERS_QUANTITY:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersQuantity,\r\n            }\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            }\r\n        case TOGGLE_FOLLOW_STATUS_CHANGING:\r\n            return {\r\n                ...state,\r\n                isFollowStatusChanging: action.isFollowStatusChanging\r\n                    ? [...state.isFollowStatusChanging, action.userId]\r\n                    : state.isFollowStatusChanging.filter(id => id !== action.userId),\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n// Action creators\r\nexport const followSuccess = (userId: number) => ({type: FOLLOW, userId});\r\nexport const unFollowSuccess = (userId: number) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users: usersType[]) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersQuantity = (totalUsersQuantity: number) => ({\r\n    type: SET_TOTAL_USERS_QUANTITY,\r\n    totalUsersQuantity\r\n});\r\nexport const toggleIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowStatusChanging = (isFollowStatusChanging: boolean, userId: number) =>\r\n    ({type: TOGGLE_FOLLOW_STATUS_CHANGING, isFollowStatusChanging, userId});\r\n\r\n\r\n// Thunk creators\r\nexport const getUsers = (currentPage: number, pageSize: number) => {\r\n    return (dispatch: any) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setUsers([]));\r\n        dispatch(setCurrentPage(currentPage));\r\n        userApi.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersQuantity(data.totalCount));\r\n        });\r\n    }\r\n}\r\nexport const unFollow = (userId: number) => {\r\n    return (dispatch: any) => {\r\n        dispatch (toggleFollowStatusChanging(true, userId))\r\n        userApi.unFollow(userId).then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch (unFollowSuccess(userId))\r\n            }\r\n            dispatch (toggleFollowStatusChanging(false, userId))\r\n        });\r\n    }\r\n}\r\nexport const follow = (userId: number) => {\r\n    debugger\r\n    return (dispatch: any) => {\r\n        dispatch (toggleFollowStatusChanging(true, userId))\r\n        userApi.follow(userId).then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch (followSuccess(userId))\r\n            }\r\n            dispatch (toggleFollowStatusChanging(false, userId))\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;","import React from \"react\"\r\nimport s from \"./Users.module.css\"\r\nimport {usersType} from \"../../Redux/Types\";\r\nimport avatarLogo from \"../../Assets/Images/avatar.jpg\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {userApi} from \"../../API/api\";\r\n\r\ntype UsersPropsType = {\r\n    totalUsersCount: number;\r\n    pageSize: number;\r\n    currentPage: number;\r\n    users: Array<usersType>;\r\n    unFollow: (id: number) => void;\r\n    follow: (id: number) => void;\r\n    onPaginationClickHandler: (p: number) => void;\r\n    isFollowStatusChanging: Array<number>;\r\n    toggleIsFollowStatusChanging: (isFollowStatusChanging: boolean, userId: number) => void\r\n}\r\n\r\nconst Users = (props: UsersPropsType) => {\r\n\r\n    let pagesNumber = Math.ceil(props.totalUsersCount / props.pageSize)\r\n\r\n    let pages = []\r\n    for (let i = 1; i <= pagesNumber; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.pagination}>\r\n                {pages.map((p, index) =>\r\n                    <span key={index} className={(props.currentPage === p) ? s.selectedPage : \"\"} style={{cursor: \"pointer\"}}\r\n                          onClick={() => {\r\n                              props.onPaginationClickHandler(p)\r\n                          }}> {p} </span>\r\n                )}\r\n            </div>\r\n            {\r\n                props.users.map((u: usersType) =>\r\n                    <div key={u.id} className={s.userContainer}>\r\n                        <div className={s.imageAndButtonContainer}>\r\n                            <div>\r\n                                <NavLink to={\"/profile/\" + u.id}>\r\n                                    <img src={u.photos.small ? u.photos.small : avatarLogo} className={s.usersPhoto}/>\r\n                                </NavLink>\r\n                            </div>\r\n                            <div className={s.button}>\r\n                                {u.followed\r\n                                    ? <button disabled={props.isFollowStatusChanging.some(id => id === u.id)} onClick={() => props.unFollow(u.id)}>UnFollow</button>\r\n                                    : <button disabled={props.isFollowStatusChanging.some(id => id === u.id)} onClick={() => props.follow(u.id)}>Follow</button>}\r\n                            </div>\r\n                        </div>\r\n                        <span className={s.userInformation}>\r\n                            <span>\r\n                                <div>{u.name}</div>\r\n                                <div>{u.status}</div>\r\n                            </span>\r\n                            <span>\r\n                                <div>{\"u.location.country\"}</div>\r\n                                <div>{\"u.location.city\"}</div>\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users","import React from \"react\";\r\nimport loader from \"../../../Assets/Images/loader.gif\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div style={{width: \"100px\", margin: \"0 auto\"}}>\r\n            <img src={loader} style={{width: \"100px\", height: \"60px\"}}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {_stateType} from \"../../Redux/Types\";\r\nimport {\r\n    follow,\r\n    getUsers,\r\n    toggleFollowStatusChanging,\r\n    unFollow,\r\n} from \"../../Redux/usersReducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass UsersContainer extends React.Component<any> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPaginationClickHandler = (pageNumber: number) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   follow={this.props.follow}\r\n                   unFollow={this.props.unFollow}\r\n                   isFollowStatusChanging = {this.props.isFollowStatusChanging}\r\n                   toggleIsFollowStatusChanging = {this.props.toggleIsFollowStatusChanging}\r\n                   onPaginationClickHandler={this.onPaginationClickHandler}\r\n                   users={this.props.users}/>\r\n        </>\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: _stateType) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        isFollowStatusChanging: state.usersPage.isFollowStatusChanging,\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n\r\n    connect (mapStateToProps, {follow,\r\n        toggleFollowStatusChanging, getUsers, unFollow})\r\n)(UsersContainer)\r\n","import React, {ChangeEvent} from \"react\";\r\nimport {profileType} from \"../../../Redux/Types\";\r\nimport s from './ProfileInfo.module.css';\r\nimport {TextField} from \"@material-ui/core\";\r\n\r\ntype propsType = {\r\n    profile: profileType,\r\n    status: string,\r\n    update: (status: string) => void,\r\n}\r\n\r\nclass ProfileStatus extends React.Component<propsType> {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status,\r\n    }\r\n\r\n    onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({editMode: true})\r\n    }\r\n    activateViewMode = () => {\r\n        this.setState({editMode: false})\r\n\r\n        this.props.update(this.state.status)\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<propsType>, prevState: Readonly<{editMode: boolean, status: string}>, snapshot?: any) {\r\n        if(prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {!this.state.editMode &&\r\n                    <div className={s.description}>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div className={s.description}>\r\n                        <TextField variant={\"outlined\"} type=\"text\" value={this.state.status} onChange={this.onStatusChange}\r\n                               autoFocus={true} onBlur={this.activateViewMode}/>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport {profileType} from \"../../../Redux/Types\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\n\r\ntype propsType = {\r\n    profile: profileType,\r\n    status: string,\r\n    update: (status: string) => void,\r\n}\r\n\r\nfunction ProfileInfo(props: propsType) {\r\n    debugger\r\n    return (\r\n\r\n        <div>\r\n            {props.profile &&\r\n                <div>\r\n                    <div className={s.description}>\r\n                        <img src={props.profile.photos.small} alt=\"small avatar\"/>\r\n                    </div>\r\n                    <div className={s.description}>\r\n                        {props.profile.fullName}\r\n                    </div>\r\n                    <div className={s.description}>\r\n                        {props.profile.contacts.facebook}\r\n                    </div>\r\n                    <ProfileStatus profile={props.profile} status={props.status} update={props.update}/>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import {profilePageType, profileType} from \"./Types\";\r\nimport {profileApi, userApi} from \"../API/api\";\r\nimport {strict} from \"assert\";\r\n\r\nconst addPost = \"ADD-POST\";\r\nconst SET_USERS_PROFILE = \"SET_USERS_PROFILE\";\r\nconst SET_USER_STATUS = \"SET_USER_STATUS\";\r\n\r\n\r\nlet initialState = {\r\n    profile: null,\r\n    status: \"\",\r\n    postsData: [\r\n        {id: 1, message: \"How are you?\", likesCount: 15},\r\n        {id: 2, message: \"It's my first post\", likesCount: 20},\r\n        {id: 3, message: \"I want to learn React\", likesCount: 35},\r\n        {id: 4, message: \"Lorem ipsum\", likesCount: 1},\r\n    ],\r\n}\r\n\r\nconst profileReducer = (state: profilePageType = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n        case addPost:\r\n            let newPost = {id: 5, message: action.addNewPost, likesCount: 0}\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n            }\r\n        case SET_USERS_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_USER_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (addNewPost: any) => {\r\n    return {type: addPost, addNewPost}\r\n}\r\nconst setUsersProfile = (profile: profileType) => ({type: SET_USERS_PROFILE, profile})\r\nconst setUserStatus = (status: string) => ({type: SET_USER_STATUS, status})\r\n\r\nexport const getUserProfile = (userId: number) => {\r\n    return (dispatch: any) => {\r\n        userApi.getProfile(userId).then(response => {\r\n            dispatch(setUsersProfile(response.data))\r\n        });\r\n    }\r\n}\r\n\r\nexport const getUserStatus = (userId: number) => {\r\n    return (dispatch: any) => {\r\n        profileApi.getStatus(userId).then(response => {\r\n            dispatch(setUserStatus(response.data))\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateUserStatus = (status: string) => {\r\n    return (dispatch: any) => {\r\n        profileApi.updateStatus(status).then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setUserStatus(status))\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\ntype propsType = {\r\n    message: string,\r\n    likesCount: number\r\n};\r\n\r\nfunction Post (props: propsType) {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src={\"https://greendestinations.org/wp-content/uploads/2019/05/avatar-exemple.jpg\"}/>\r\n            {props.message}\r\n            <div>\r\n                <span>{props.likesCount}  likes</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react';\r\nimport {Field, reduxForm, SubmitHandler} from \"redux-form\";\r\nimport {maxLength, requiredField} from \"../../../Utils/Validation/validators\";\r\nimport {Textarea} from \"../../Common/FormControls/FormControls\";\r\n\r\ntype propsType = {\r\n    handleSubmit: SubmitHandler;\r\n}\r\nconst maxLength10 = maxLength(10);\r\n\r\nfunction AddPostForm(props: propsType) {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field component={Textarea} name={\"addNewPost\"}\r\n                           placeholder={\"Add your post here\"} validate={[requiredField, maxLength10]}/>\r\n                </div>\r\n                <div>\r\n                    <button>Add post</button>\r\n                </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const AddPostReduxForm = reduxForm({\r\n    form: 'AddPost'\r\n})(AddPostForm)","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {AddPostReduxForm} from \"./AddPostForm\";\r\n\r\ntype propsType = {\r\n    posts: Array<{ id: number, message: string, likesCount: number }>,\r\n    addPost: (addNewPost: string) => void,\r\n}\r\n\r\n\r\n\r\nfunction MyPosts (props: propsType) {\r\n    let postElements = props.posts.map(p => <Post message ={p.message} likesCount = {p.likesCount} />)\r\n\r\n    const addPost = (addNewPost: string) => {\r\n        props.addPost(addNewPost);\r\n    }\r\n\r\n    const onSubmit = (values: any) => {\r\n        addPost(values.addNewPost)\r\n    }\r\n\r\n    return (\r\n        <div className={s.main}>\r\n            <h3> My posts </h3>\r\n            <AddPostReduxForm onSubmit={onSubmit}/>\r\n            <div className={s.posts}>  {postElements}  </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../Redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {_stateType} from \"../../../Redux/Types\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state: _stateType) => {\r\n    return {\r\n        posts: state.profilePage.postsData,\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        addPost: (addNewPost: string) => {\r\n            dispatch ( addPostActionCreator(addNewPost) )\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {profileType} from \"../../Redux/Types\";\r\n\r\ntype propsType = {\r\n    profile: profileType,\r\n    status: string,\r\n    update: (status: string) => void,\r\n}\r\n\r\nfunction Profile(props: propsType) {\r\n\r\n    return (\r\n        <div >\r\n            <ProfileInfo profile={props.profile} status={props.status} update={props.update}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {_stateType} from \"../../Redux/Types\";\r\nimport {getUserProfile, getUserStatus, updateUserStatus} from \"../../Redux/profileReducer\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component<any> {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorisedId\r\n            if(!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getUserStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className={s.content}>\r\n            <Profile profile={this.props.profile} status={this.props.status} update={this.props.updateUserStatus}/>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: _stateType) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorisedId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    withRouter,\r\n    connect (mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus}),\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype headerPropsType = {\r\n    isAuth: boolean\r\n    login: string\r\n    logout: () => void\r\n}\r\n\r\nfunction Header (props: headerPropsType) {\r\n    return (\r\n        <header className={s.header}>\r\n        <img src={\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQie3E0fOUC7Wzjg0m3zZMX44h4RqWOSJqM1cfgO0t2CeE2pmhc&usqp=CAU\"}/>\r\n\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth\r\n                ? <div> { props.login } --- <button onClick={props.logout}> Log out </button> </div>\r\n                : <NavLink to={\"/login\"}>Login</NavLink>}\r\n\r\n        </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import {authType} from \"./Types\";\r\nimport {loginApi, userApi} from \"../API/api\";\r\nimport {FormAction, stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\";\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n}\r\n\r\nconst authReducer = (state: authType = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setUserData = (id: number|null, email: string|null, login: string|null, isAuth: boolean) =>\r\n    ({type: SET_USER_DATA, payload: {id, email, login, isAuth}})\r\n\r\nexport const checkAuth = () => {\r\n   return (dispatch: any) => {\r\n       return userApi.checkAuth()\r\n           .then(data => {\r\n            if (data.resultCode === 0) {\r\n                let {id, login, email} = data.data\r\n                dispatch (setUserData (id, email, login, true))\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const login = (email: string, password: string|number, rememberMe: boolean) => {\r\n    return (dispatch: any) => {\r\n        loginApi.signIn({email, password, rememberMe})\r\n            .then(data => {\r\n            if (data.data.resultCode === 0) {\r\n                dispatch (checkAuth())\r\n            } else {\r\n                let formErrorMessage = data.data.messages.length > 0 ? data.data.messages : \"Error occurred\";\r\n                dispatch(stopSubmit(\"login\", {_error: `${formErrorMessage}`}))\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return (dispatch: any) => {\r\n        loginApi.signOut()\r\n            .then(data => {\r\n            if (data.data. resultCode === 0) {\r\n                dispatch (setUserData (null, null, null, false))\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport { logout } from \"../../Redux/authReducer\";\r\nimport {_stateType} from \"../../Redux/Types\";\r\n\r\nclass HeaderContainer extends React.Component<any, any> {\r\n\r\n    render() {\r\n        return <Header isAuth={this.props.isAuth} login={this.props.login} logout={this.props.logout}/>;\r\n    }\r\n}\r\n\r\nconst mapsStateToProps = (state: _stateType) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n    }\r\n}\r\n\r\nexport default connect(mapsStateToProps, {logout})(HeaderContainer)","import React from \"react\";\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {Input} from \"../Common/FormControls/FormControls\";\r\nimport {maxLength, requiredField} from \"../../Utils/Validation/validators\";\r\nimport s from \"../Common/FormControls/FormControls.module.css\"\r\n\r\ntype loginFormType = {\r\n    handleSubmit: any;\r\n    error: string;\r\n}\r\n\r\nconst maxLength10 = maxLength(10);\r\nconst maxLength50 = maxLength(50);\r\n\r\nlet LoginForm = (props: loginFormType) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field type={\"text\"} name={\"email\"} component={Input} placeholder={\"email\"}\r\n                       validate={[requiredField, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <Field type={\"password\"} name={\"password\"} component={Input} placeholder={\"password\"}\r\n                       validate={[requiredField, maxLength10]}/>\r\n            </div>\r\n            <div style={{display: \"inline-flex\"}}>\r\n                <Field type={\"checkbox\"} name={\"rememberMe\"} component={Input}/> <span>remember me</span>\r\n            </div>\r\n            {props.error &&\r\n            <div className={s.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n            <div>\r\n                <button>Sign in</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const LoginReduxForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'login'\r\n})(LoginForm)","import React from \"react\";\r\nimport {LoginReduxForm} from \"./LoginForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {login, logout} from \"../../Redux/authReducer\";\r\nimport {_stateType} from \"../../Redux/Types\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\ntype loginType = {\r\n    login: (email: string, password: string|number, rememberMe: boolean) => void,\r\n    isAuth: boolean,\r\n}\r\n\r\nconst Login = (props: loginType) => {\r\n    const onSubmit = (formData: any) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>LOGIN</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: _stateType) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, {login, logout})(Login)","import React from 'react';\r\nimport s from './Friends.module.css';\r\nimport {friendsType} from \"../../Redux/Types\";\r\n\r\ntype propsType = {\r\n    friends:  friendsType[],\r\n}\r\nfunction Friends(props: propsType) {\r\n\r\n    let friendsElements = props.friends.map((f: { name: string; imgSource: string; }, index) =>\r\n        <div className={s.friend} key={index}>\r\n            <img src={f.imgSource} alt={\"\"}/>\r\n            <div className={s.friendName}>\r\n                {f.name}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n\r\n            <h2>Friends</h2>\r\n\r\n            <div className={s.friends}>\r\n                {friendsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friends","import {checkAuth} from \"./authReducer\";\r\nimport {appType} from \"./Types\";\r\n\r\n\r\nconst INITIALISED_SUCCESFULLY = \"INITIALISED_SUCCESFULLY\";\r\n\r\nlet initialState = {\r\n    initialised: false\r\n}\r\n\r\nconst appReducer = (state: appType = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case INITIALISED_SUCCESFULLY:\r\n            return {\r\n                ...state,\r\n                initialised: true,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initialisedSuccessfully = () => ({type: INITIALISED_SUCCESFULLY})\r\n\r\nexport const initialiseApp = () => (dispatch: any) => {\r\n    let checkAuthResult = dispatch(checkAuth())\r\n    Promise.all([checkAuthResult])\r\n        .then(() => {\r\n            dispatch(initialisedSuccessfully())\r\n        })\r\n}\r\n\r\nexport default appReducer;","import React from 'react';\nimport {HashRouter, Route} from \"react-router-dom\";\nimport './App.css';\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport Music from \"./Components/Music/Music\";\nimport News from \"./Components/News/News\";\nimport Settings from \"./Components/Settings/Settings\";\nimport {_stateType} from './Redux/Types';\nimport DialogsContainer from \"./Components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./Components/Users/UsersContainer\";\nimport ProfileContainer from \"./Components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\nimport Login from \"./Components/Login/Login\";\nimport Friends from \"./Components/Friends/Friends\";\nimport {connect} from \"react-redux\";\nimport {initialiseApp} from \"./Redux/appReducer\";\nimport Preloader from \"./Components/Common/Preloader/Preloader\";\n\n\nclass App extends React.Component<any, any> {\n    componentDidMount() {\n        this.props.initialiseApp()\n    }\n\n    render() {\n        if(!this.props.initialised){\n            return <Preloader/>\n        }\n        return (\n            <HashRouter>\n                <div className={\"app-wrapper\"}>\n                    <HeaderContainer/>\n                    <Navbar/>\n                    <div className={\"app-wrapper-content\"}>\n                        <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                        <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                        <Route path='/news' render={() => <Music/>}/>\n                        <Route path='/music' render={() => <News/>}/>\n                        <Route path='/settings' render={() => <Settings/>}/>\n                        <Route path='/users' render={() => <UsersContainer/>}/>\n                        <Route path='/login' render={() => <Login/>}/>\n                    </div>\n                    <div style={{gridArea: \"r\", backgroundColor: \"black\"}}>\n                        <Friends friends={this.props.stateForFriends}/>\n                    </div>\n                </div>\n            </HashRouter>\n        );\n    }\n}\n\nconst mapStateToProps = (state: _stateType) => ({\n    stateForFriends: state.friends,\n    initialised: state.app.initialised\n})\n\nexport default connect(mapStateToProps, {initialiseApp})(App);","import {friendsType} from \"./Types\";\r\n\r\nlet initialState = [\r\n    {name: \"David\", imgSource: \"https://greendestinations.org/wp-content/uploads/2019/05/avatar-exemple.jpg\"},\r\n    {name: \"Tigran\", imgSource: \"https://freesvg.org/img/myAvatar.png\"},\r\n    {name: \"Olga\", imgSource: \"https://st2.depositphotos.com/2703645/5669/v/950/depositphotos_56695985-stock-illustration-male-avatar.jpg\"},\r\n]\r\n\r\nconst friendsReducer = (state: friendsType[] = initialState, action: any) => {\r\n\r\n    return state\r\n}\r\n\r\nexport default friendsReducer;","import {applyMiddleware, combineReducers, createStore, Store} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport messageReducer from \"./messageReducer\";\r\nimport friendsReducer from \"./friendsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport { reducer as formReducer } from \"redux-form\"\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messageReducer,\r\n    usersPage: usersReducer,\r\n    friends: friendsReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer,\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof reducers>\r\n\r\nlet store: Store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nexport default store","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from \"./Redux/reduxStore\";\nimport {Provider} from 'react-redux';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPhoto\":\"Users_usersPhoto__2cLG_\",\"selectedPage\":\"Users_selectedPage__3FCA3\",\"pagination\":\"Users_pagination__3QDSV\",\"userContainer\":\"Users_userContainer__PLg5V\",\"imageAndButtonContainer\":\"Users_imageAndButtonContainer__3Yr9E\",\"button\":\"Users_button__2GMTj\",\"userInformation\":\"Users_userInformation__3W_DY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__ZYcM1\",\"error\":\"FormControls_error__3I2i7\",\"formSummaryError\":\"FormControls_formSummaryError__2CIQE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileImage\":\"ProfileInfo_profileImage__3S877\",\"description\":\"ProfileInfo_description__1tfyt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2AfEL\",\"dialogsItems\":\"Dialogs_dialogsItems__2aUmB\",\"messages\":\"Dialogs_messages__1tZuv\",\"messagesRow\":\"Dialogs_messagesRow__gWE1b\",\"messagesCell1\":\"Dialogs_messagesCell1__gL8Gp\",\"messagesCell2\":\"Dialogs_messagesCell2__72Wdq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__22q5d\",\"friend\":\"Friends_friend__2--Sd\",\"friendName\":\"Friends_friendName__3AgSy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__BQH-u\",\"active\":\"DialogItem_active__-weKp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"MyPosts_main__PN3Os\",\"posts\":\"MyPosts_posts__1PK4X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__l2oe9\",\"loginBlock\":\"Header_loginBlock__Zic5-\"};"],"sourceRoot":""}