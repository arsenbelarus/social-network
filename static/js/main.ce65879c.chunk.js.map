{"version":3,"sources":["Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Dialogs/Dialogs.module.css","Components/Users/Users.module.css","Components/Navbar/Friends/Friends.module.css","Components/Dialogs/DialogItem/DialogItem.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Header/Header.module.css","Components/Dialogs/MessageItem/Message.module.css","Assets/Images/avatar.jpg","Assets/Images/loader.gif","Components/Profile/MyPosts/Post/Post.module.css","Components/Navbar/Navbar.module.css","serviceWorker.ts","Components/Navbar/Friends/Friends.tsx","Components/Navbar/Navbar.tsx","Components/Music/Music.tsx","Components/News/News.tsx","Components/Settings/Settings.tsx","Redux/messageReducer.ts","Components/Dialogs/DialogItem/DialogItem.tsx","Components/Dialogs/MessageItem/Message.tsx","Components/Dialogs/Dialogs.tsx","HOC/withAuthRedirect.tsx","Components/Dialogs/DialogsContainer.tsx","API/api.ts","Redux/usersReducer.ts","Components/Users/Users.tsx","Components/Common/Preloader/Preloader.tsx","Components/Users/UsersContainer.tsx","Components/Profile/ProfileInfo/ProfileStatus.tsx","Components/Profile/ProfileInfo/ProfileInfo.tsx","Redux/profileReducer.ts","Components/Profile/MyPosts/Post/Post.tsx","Components/Profile/MyPosts/MyPosts.tsx","Components/Profile/MyPosts/MyPostsContainer.tsx","Components/Profile/Profile.tsx","Components/Profile/ProfileContainer.tsx","Components/Header/Header.tsx","Redux/authReducer.ts","Components/Header/HeaderContainer.tsx","Components/Login/Login.tsx","App.tsx","Redux/friendsReducer.ts","Redux/reduxStore.ts","index.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","Friends","props","friendsElements","friends","map","f","className","s","friend","src","imgSource","friendName","name","Navbar","nav","item","to","activeClassName","activeLink","Music","News","Settings","initialState","dialogsData","id","messagesDataLeft","message","messagesDataRight","newMessageText","messageReducer","state","action","type","newMessage","DialogItem","dialog","active","Message","Dialogs","dialogElements","messages","d","key","messageElementsLeft","m","messageElementsRight","newMessageBody","dialogs","dialogsItems","messagesRow","messagesCell1","value","onChange","e","target","updateNewMessageText","onClick","addMessage","messagesCell2","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","React","connect","compose","messagesPage","dispatch","updateNewMessageTextActionCreator","axiosInstance","axios","create","withCredentials","baseURL","headers","userApi","currentPage","pageSize","get","then","response","data","userId","post","delete","users","totalUsersCount","isFetching","isFollowStatusChanging","setUsers","toggleIsFetching","toggleFollowStatusChanging","usersReducer","u","followed","totalUsersQuantity","filter","Users","pagesNumber","Math","ceil","pages","i","push","pagination","p","selectedPage","style","cursor","onPaginationClickHandler","userContainer","imageAndButtonContainer","photos","small","avatarLogo","usersPhoto","button","disabled","some","unFollow","follow","status","Preloader","width","margin","loader","height","UsersContainer","pageNumber","getUsers","toggleIsFollowStatusChanging","usersPage","resultCode","followSuccess","setCurrentPage","items","totalCount","unFollowSuccess","ProfileStatus","editMode","activateEditMode","setState","activateViewMode","description","onDoubleClick","profile","aboutMe","autoFocus","onBlur","ProfileInfo","alt","fullName","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJob","lookingForAJobDescription","large","postsData","likesCount","newPostText","profileReducer","newPost","newText","Post","MyPosts","postElements","posts","createRef","main","current","updateNewPostText","ref","addPost","MyPostsContainer","profilePage","text","Profile","content","ProfileContainer","params","getUserProfile","withRouter","Header","header","loginBlock","login","email","setUserData","authReducer","HeaderContainer","checkAuth","Login","App","stateForFriends","path","render","DialogsContainer","friendsReducer","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","getState","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.ce65879c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileImage\":\"ProfileInfo_profileImage__3S877\",\"description\":\"ProfileInfo_description__1tfyt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2AfEL\",\"dialogsItems\":\"Dialogs_dialogsItems__2aUmB\",\"messages\":\"Dialogs_messages__1tZuv\",\"messagesRow\":\"Dialogs_messagesRow__gWE1b\",\"messagesCell1\":\"Dialogs_messagesCell1__gL8Gp\",\"messagesCell2\":\"Dialogs_messagesCell2__72Wdq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPhoto\":\"Users_usersPhoto__2cLG_\",\"selectedPage\":\"Users_selectedPage__3FCA3\",\"pagination\":\"Users_pagination__3QDSV\",\"userContainer\":\"Users_userContainer__PLg5V\",\"imageAndButtonContainer\":\"Users_imageAndButtonContainer__3Yr9E\",\"button\":\"Users_button__2GMTj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__1qYCi\",\"friend\":\"Friends_friend__AGAtK\",\"friendName\":\"Friends_friendName__jnWZ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__BQH-u\",\"active\":\"DialogItem_active__-weKp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"MyPosts_main__PN3Os\",\"posts\":\"MyPosts_posts__1PK4X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__l2oe9\",\"loginBlock\":\"Header_loginBlock__Zic5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3K1h0\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.64830c49.jpg\";","module.exports = __webpack_public_path__ + \"static/media/loader.181849d9.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3YEHT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__7zjwi\",\"item\":\"Navbar_item__2dKJe\",\"activeLink\":\"Navbar_activeLink__3dRIm\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from './Friends.module.css';\r\nimport {friendsType} from \"../../../Redux/Types\";\r\n\r\ntype propsType = {\r\n    friends:  friendsType[],\r\n}\r\nfunction Friends(props: propsType) {\r\n\r\n    let friendsElements = props.friends.map((f: { name: string; imgSource: string; }) =>\r\n        <div className={s.friend}>\r\n            <img src={f.imgSource}/>\r\n            <div className={s.friendName}>\r\n                {f.name}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n\r\n            <h2>Friends</h2>\r\n\r\n            <div className={s.friends}>\r\n                {friendsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friends","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Friends from \"./Friends/Friends\";\r\nimport {friendsType} from \"../../Redux/Types\";\r\n\r\ntype propsType = {\r\n    friends:  friendsType[],\r\n}\r\nfunction Navbar(props: propsType) {\r\n    return (\r\n        <div className={s.nav}>\r\n            <nav>\r\n                <div className={s.item}>\r\n                    <NavLink to={\"/profile\"} activeClassName={s.activeLink}> Profile </NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={\"/dialogs\"} activeClassName={s.activeLink}> Messages</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={\"/users\"} activeClassName={s.activeLink}> Users</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={\"/news\"} activeClassName={s.activeLink}> News</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={\"/music\"} activeClassName={s.activeLink}> Music</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={\"/settings\"} activeClassName={s.activeLink}> Settings</NavLink>\r\n                </div>\r\n            </nav>\r\n            <Friends friends = {props.friends}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\n\r\nfunction Music() {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\n\r\nfunction News() {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\n\r\nfunction Settings() {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings","import {messagesPageType} from \"./Types\";\r\n\r\nconst addMessage = \"ADD-MESSAGE\";\r\nconst updateNewMessageText = \"UPDATE-NEW-MESSAGE-TEXT\";\r\n\r\nexport const addMessageActionCreator = () => {\r\n    return {type: addMessage}\r\n}\r\nexport const updateNewMessageTextActionCreator = (newMessage: string) => {\r\n    return {type: updateNewMessageText, newMessage: newMessage}\r\n}\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        {id: 1, name: \"Arsen\"},\r\n        {id: 2, name: \"Olya\"},\r\n        {id: 3, name: \"Tigran\"},\r\n        {id: 4, name: \"David\"},\r\n    ],\r\n    messagesDataLeft: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"How are you\"},\r\n        {id: 3, message: \"Hello world\"},\r\n        {id: 4, message: \"Lorem ipsum\"},\r\n    ],\r\n    messagesDataRight: [\r\n        {id: 1, message: \"I love my wife\"},\r\n        {id: 2, message: \"fg gfdgsdfg g fd\"},\r\n        {id: 3, message: \"fg dfgdf dfg \"},\r\n        {id: 4, message: \" fd sgdf dfg df \"},\r\n    ],\r\n    newMessageText: \"\",\r\n}\r\n\r\nconst messageReducer = (state: messagesPageType = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case updateNewMessageText:\r\n            return {\r\n                ...state,\r\n                newMessageText: action.newMessage,\r\n            }\r\n        case addMessage:\r\n            let newMessage = {id: 5, message: state.newMessageText,}\r\n            return {\r\n                ...state,\r\n                messagesDataLeft: [...state.messagesDataLeft, newMessage],\r\n                newMessageText: \"\",\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default messageReducer;\r\n","import React from 'react';\r\nimport s from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype DialogItem = {\r\n    name: string,\r\n    id: number\r\n}\r\n\r\nfunction DialogItem(props: DialogItem) {\r\n    return (\r\n        <div className={`${s.dialog} ${s.active}`}>\r\n            <img src={\"https://greendestinations.org/wp-content/uploads/2019/05/avatar-exemple.jpg\"}/>\r\n            <NavLink to={'/dialogs/' + props.id}> {props.name} </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from 'react';\r\nimport s from './Message.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\ntype propsMessage = {\r\n    message: string\r\n}\r\n\r\nfunction Message(props: propsMessage) {\r\n    return (\r\n            <div className={s.message}>\r\n                {props.message}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Message","import React, {ChangeEvent} from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./MessageItem/Message\";\r\nimport {addMessageActionCreator, updateNewMessageTextActionCreator,} from \"../../Redux/messageReducer\";\r\nimport {messagesPageType} from \"../../Redux/Types\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\ntype propsType = {\r\n    messages: messagesPageType,\r\n    newMessageText: string,\r\n    updateNewMessageText: (newMessage: string) => void,\r\n    addMessage: () => void,\r\n}\r\n\r\nfunction Dialogs(props: propsType) {\r\n    let dialogElements = props.messages.dialogsData.map((d: { name: string; id: number; }) => <DialogItem name={d.name}\r\n                                                                                                          id={d.id} key={d.id}/>)\r\n    let messageElementsLeft = props.messages.messagesDataLeft.map((m: { message: string; }) => <Message message={m.message}/>)\r\n    let messageElementsRight = props.messages.messagesDataRight.map((m: { message: string; }) => <Message message={m.message}/>)\r\n\r\n    let newMessageBody = props.newMessageText\r\n\r\n    const addMessage = () => {\r\n        props.addMessage()\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let newMessage = e.target.value;\r\n        if (newMessage) {\r\n            props.updateNewMessageText(newMessage)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div className={s.messagesRow}>\r\n                    <div className={s.messagesCell1}>\r\n                        {messageElementsLeft}\r\n                        <div>\r\n                            <textarea value={newMessageBody} onChange={onChangeHandler}/>\r\n                        </div>\r\n                        <div>\r\n                            <button onClick={addMessage}> Add message </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.messagesCell2}>\r\n                        {messageElementsRight}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {_stateType} from \"../Redux/Types\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToPropsForRedirect = (state: _stateType) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component: any) => {\r\n    class RedirectComponent extends React.Component<any, any> {\r\n        render() {\r\n            if(!this.props.isAuth) {return <Redirect to={\"/login\"}/>};\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}","import React from 'react';\r\nimport {addMessageActionCreator, updateNewMessageTextActionCreator,} from \"../../Redux/messageReducer\";\r\nimport { _stateType} from \"../../Redux/Types\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state: _stateType) => {\r\n    return {\r\n        messages: state.messagesPage,\r\n        newMessageText: state.messagesPage.newMessageText,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        updateNewMessageText: (newMessage: string) => {\r\n            if (newMessage) {\r\n                dispatch (updateNewMessageTextActionCreator(newMessage))\r\n            }\r\n        },\r\n        addMessage: () => {\r\n            dispatch ( addMessageActionCreator() )\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n)(Dialogs)","import axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"a318ecb3-f5df-4512-99ed-aabe354d9b6f\"\r\n    },\r\n})\r\n\r\nexport const userApi = {\r\n    getUsers (currentPage: number = 1, pageSize: number = 100) {\r\n        return axiosInstance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    checkAuth () {\r\n        return axiosInstance.get('auth/me')\r\n            .then(response => response.data)\r\n    },\r\n    follow (userId: number) {\r\n        return axiosInstance.post(`follow/${userId}`, {})\r\n            .then(response => response.data)\r\n    },\r\n    unFollow (userId: number) {\r\n        return axiosInstance.delete(`follow/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    getProfile (userId: number) {\r\n        return axiosInstance.get(`https://social-network.samuraijs.com/api/1.0/profile/${userId}`)\r\n    },\r\n}\r\n\r\n\r\n","import {usersPageType, usersType} from \"./Types\";\r\nimport {userApi} from \"../API/api\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_QUANTITY = \"SET_TOTAL_USERS_QUANTITY\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_FOLLOW_STATUS_CHANGING = \"TOGGLE_FOLLOW_STATUS_CHANGING\";\r\n\r\nlet initialState: usersPageType = {\r\n    users: [],\r\n    pageSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    isFollowStatusChanging: [],\r\n}\r\n\r\n\r\nconst usersReducer = (state: usersPageType = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage,\r\n            }\r\n\r\n        case SET_TOTAL_USERS_QUANTITY:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersQuantity,\r\n            }\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            }\r\n        case TOGGLE_FOLLOW_STATUS_CHANGING:\r\n            return {\r\n                ...state,\r\n                isFollowStatusChanging: action.isFollowStatusChanging\r\n                    ? [...state.isFollowStatusChanging, action.userId]\r\n                    : state.isFollowStatusChanging.filter(id => id !== action.userId),\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n// Action creators\r\nexport const followSuccess = (userId: number) => ({type: FOLLOW, userId});\r\nexport const unFollowSuccess = (userId: number) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users: usersType[]) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersQuantity = (totalUsersQuantity: number) => ({\r\n    type: SET_TOTAL_USERS_QUANTITY,\r\n    totalUsersQuantity\r\n});\r\nexport const toggleIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowStatusChanging = (isFollowStatusChanging: boolean, userId: number) =>\r\n    ({type: TOGGLE_FOLLOW_STATUS_CHANGING, isFollowStatusChanging, userId});\r\n\r\n\r\n// Thunk creators\r\nexport const getUsers = (currentPage: number, pageSize: number) => {\r\n    return (dispatch: any) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setUsers([]));\r\n        dispatch(setCurrentPage(currentPage));\r\n        userApi.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersQuantity(data.totalCount));\r\n        });\r\n    }\r\n}\r\nexport const unFollow = (userId: number) => {\r\n    return (dispatch: any) => {\r\n        dispatch (toggleFollowStatusChanging(true, userId))\r\n        userApi.unFollow(userId).then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch (unFollowSuccess(userId))\r\n            }\r\n            dispatch (toggleFollowStatusChanging(false, userId))\r\n        });\r\n    }\r\n}\r\nexport const follow = (userId: number) => {\r\n    debugger\r\n    return (dispatch: any) => {\r\n        dispatch (toggleFollowStatusChanging(true, userId))\r\n        userApi.follow(userId).then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch (followSuccess(userId))\r\n            }\r\n            dispatch (toggleFollowStatusChanging(false, userId))\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;","import React from \"react\"\r\nimport s from \"./Users.module.css\"\r\nimport {usersType} from \"../../Redux/Types\";\r\nimport avatarLogo from \"../../Assets/Images/avatar.jpg\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {userApi} from \"../../API/api\";\r\n\r\ntype UsersPropsType = {\r\n    totalUsersCount: number;\r\n    pageSize: number;\r\n    currentPage: number;\r\n    users: Array<usersType>;\r\n    unFollow: (id: number) => void;\r\n    follow: (id: number) => void;\r\n    onPaginationClickHandler: (p: number) => void;\r\n    isFollowStatusChanging: Array<number>;\r\n    toggleIsFollowStatusChanging: (isFollowStatusChanging: boolean, userId: number) => void\r\n}\r\n\r\nconst Users = (props: UsersPropsType) => {\r\n\r\n    let pagesNumber = Math.ceil(props.totalUsersCount / props.pageSize)\r\n\r\n    let pages = []\r\n    for (let i = 1; i <= pagesNumber; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.pagination}>\r\n                {pages.map(p =>\r\n                    <span className={(props.currentPage === p) ? s.selectedPage : \"\"} style={{cursor: \"pointer\"}}\r\n                          onClick={() => {\r\n                              props.onPaginationClickHandler(p)\r\n                          }}> {p} </span>\r\n                )}\r\n            </div>\r\n            {\r\n                props.users.map((u: usersType) =>\r\n                    <div key={u.id} className={s.userContainer}>\r\n                        <div className={s.imageAndButtonContainer}>\r\n                            <div>\r\n                                <NavLink to={\"/profile/\" + u.id}>\r\n                                    <img src={u.photos.small ? u.photos.small : avatarLogo} className={s.usersPhoto}/>\r\n                                </NavLink>\r\n                            </div>\r\n                            <div className={s.button}>\r\n                                {u.followed\r\n                                    ? <button disabled={props.isFollowStatusChanging.some(id => id === u.id)} onClick={() => props.unFollow(u.id)}>UnFollow</button>\r\n                                    : <button disabled={props.isFollowStatusChanging.some(id => id === u.id)} onClick={() => props.follow(u.id)}>Follow</button>}\r\n                            </div>\r\n                        </div>\r\n                        <span>\r\n                            <span>\r\n                                <div>{u.name}</div>\r\n                                <div>{u.status}</div>\r\n                            </span>\r\n                            <span>\r\n                                <div>{\"u.location.country\"}</div>\r\n                                <div>{\"u.location.city\"}</div>\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users","import React from \"react\";\r\nimport loader from \"../../../Assets/Images/loader.gif\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div style={{width: \"100px\", margin: \"0 auto\"}}>\r\n            <img src={loader} style={{width: \"100px\", height: \"60px\"}}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {_stateType} from \"../../Redux/Types\";\r\nimport {\r\n    follow,\r\n    getUsers,\r\n    toggleFollowStatusChanging,\r\n    unFollow,\r\n} from \"../../Redux/usersReducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\n\r\n\r\nclass UsersContainer extends React.Component<any> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPaginationClickHandler = (pageNumber: number) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   follow={this.props.follow}\r\n                   unFollow={this.props.unFollow}\r\n                   isFollowStatusChanging = {this.props.isFollowStatusChanging}\r\n                   toggleIsFollowStatusChanging = {this.props.toggleIsFollowStatusChanging}\r\n                   onPaginationClickHandler={this.onPaginationClickHandler}\r\n                   users={this.props.users}/>\r\n        </>\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: _stateType) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        isFollowStatusChanging: state.usersPage.isFollowStatusChanging,\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect (mapStateToProps, {follow,\r\n        toggleFollowStatusChanging, getUsers, unFollow})\r\n)(UsersContainer)\r\n","import React from \"react\";\r\nimport {profileType} from \"../../../Redux/Types\";\r\nimport s from './ProfileInfo.module.css';\r\n\r\ntype propsType = {\r\n    profile: profileType\r\n}\r\n\r\nclass ProfileStatus extends React.Component<any, any> {\r\n    state = {\r\n        editMode: false,\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({editMode: true})\r\n    }\r\n    activateViewMode = () => {\r\n        this.setState({editMode: false})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {!this.state.editMode &&\r\n                    <div className={s.description}>\r\n                        <span onDoubleClick={this.activateEditMode}>{`My status ${this.props.profile.aboutMe}`}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div className={s.description}>\r\n                        <input type=\"text\" value={`My status ${this.props.profile.aboutMe}`}\r\n                               autoFocus={true} onBlur={this.activateViewMode}/>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport {profileType} from \"../../../Redux/Types\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\n\r\ntype propsType = {\r\n    profile: profileType\r\n}\r\n\r\nfunction ProfileInfo(props: propsType) {\r\n    return (\r\n        <div>\r\n{/*            <div className={s.profileImage}>\r\n                <img src=\"https://www.colbeck.co.uk/wp-content/uploads/2018/09/sunset-banner.jpg\" alt=\"banner\"/>\r\n            </div>*/}\r\n            <div className={s.description}>\r\n                <img src={props.profile.photos.small} alt=\"small avatar\"/>\r\n            </div>\r\n            <div className={s.description}>\r\n                {props.profile.fullName}\r\n            </div>\r\n            <div className={s.description}>\r\n                {props.profile.contacts.facebook}\r\n            </div>\r\n            <ProfileStatus profile={props.profile}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import {profilePageType, profileType} from \"./Types\";\r\nimport {userApi} from \"../API/api\";\r\n\r\nconst addPost = \"ADD-POST\";\r\nconst updateNewPostText = \"UPDATE-NEW-POST-TEXT\";\r\nconst SET_USERS_PROFILE = \"SET_USERS_PROFILE\";\r\n\r\n\r\nlet initialState = {\r\n    profile: {\r\n        aboutMe: \"я круто чувак 1001%\",\r\n        contacts: {\r\n            facebook: \"facebook.com\",\r\n            website: null,\r\n            vk: \"vk.com/dimych\",\r\n            twitter: \"https://twitter.com/@sdf\",\r\n            instagram: \"instagra.com/sds\",\r\n            youtube: null,\r\n            github: \"github.com\",\r\n            mainLink: null\r\n        },\r\n        lookingForAJob: true,\r\n        lookingForAJobDescription: \"не ищу, а дурачусь\",\r\n        fullName: \"samurai dimych\",\r\n        userId: 2,\r\n        photos: {\r\n            small: \"https://social-network.samuraijs.com/activecontent/images/users/2/user-small.jpg?v=0\",\r\n            large: \"https://social-network.samuraijs.com/activecontent/images/users/2/user.jpg?v=0\"\r\n        }\r\n    },\r\n    postsData: [\r\n        {id: 1, message: \"How are you?\", likesCount: 15},\r\n        {id: 2, message: \"It's my first post\", likesCount: 20},\r\n        {id: 3, message: \"I want to learn React\", likesCount: 35},\r\n        {id: 4, message: \"Lorem ipsum\", likesCount: 1},\r\n    ],\r\n    newPostText: \"\"\r\n}\r\n\r\nconst profileReducer = (state: profilePageType = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n        case addPost:\r\n            let newPost = { id: 5, message: state.newPostText, likesCount: 0 }\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n                newPostText: \"\",\r\n            }\r\n\r\n        case updateNewPostText:\r\n            if (action.newText) {\r\n                return {\r\n                    ...state,\r\n                    newPostText: action.newText,\r\n                }\r\n            }\r\n        case SET_USERS_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = () => {\r\n    return { type: addPost }\r\n}\r\nexport const updateNewPostTextActionCreator = (newText: string) => {\r\n    return { type: updateNewPostText, newText: newText }\r\n}\r\nconst setUsersProfile = (profile: profileType) => ({type: SET_USERS_PROFILE, profile})\r\n\r\nexport const getUserProfile = (userId: number) => {\r\n    return (dispatch: any) => {\r\n        userApi.getProfile(userId).then(response => {\r\n            dispatch(setUsersProfile(response.data))\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\ntype propsType = {\r\n    message: string,\r\n    likesCount: number\r\n};\r\n\r\nfunction Post (props: propsType) {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src={\"https://greendestinations.org/wp-content/uploads/2019/05/avatar-exemple.jpg\"}/>\r\n            {props.message}\r\n            <div>\r\n                <span>{props.likesCount}  likes</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {type} from \"os\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../Redux/profileReducer\";\r\n\r\ntype propsType = {\r\n    posts: Array<{ id: number, message: string, likesCount: number }>,\r\n    newPostText: string,\r\n    updateNewPostText: (text: string) => void,\r\n    addPost: () => void,\r\n}\r\n\r\n\r\n\r\nfunction MyPosts (props: propsType) {\r\n    let postElements = props.posts.map(p => <Post message ={p.message} likesCount = {p.likesCount} />)\r\n    let newPost: React.RefObject<HTMLTextAreaElement> = React.createRef<HTMLTextAreaElement>()\r\n\r\n    const addPost = () => {\r\n        props.addPost();\r\n    }\r\n    const onChangeHandler = () => {\r\n        let newText = newPost.current?.value;\r\n        if (newText) {\r\n            props.updateNewPostText(newText);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.main}>\r\n            <h3> My posts </h3>\r\n            <div>\r\n                <div>\r\n                    <textarea value={props.newPostText} onChange={onChangeHandler} ref={newPost}/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={addPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts","import React from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../Redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {_stateType} from \"../../../Redux/Types\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state: _stateType) => {\r\n    return {\r\n        posts: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        updateNewPostText: (text: string) => {\r\n            if (text) {\r\n                dispatch (updateNewPostTextActionCreator(text));\r\n            }\r\n        },\r\n        addPost: () => {\r\n            dispatch ( addPostActionCreator() )\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {profileType} from \"../../Redux/Types\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\ntype propsType = {\r\n    profile: profileType,\r\n}\r\n\r\nfunction Profile(props: propsType) {\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo profile={props.profile}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {_stateType} from \"../../Redux/Types\";\r\nimport {getUserProfile} from \"../../Redux/profileReducer\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component<any> {\r\n\r\n    componentDidMount() {\r\n        let userId: number = this.props.match.params.userId;\r\n        if (!userId) {userId = 2}\r\n        this.props.getUserProfile(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className={s.content}>\r\n            <Profile profile={this.props.profile}/>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: _stateType) => ({\r\n    profile: state.profilePage.profile,\r\n});\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    withRouter,\r\n    connect (mapStateToProps, {getUserProfile}),\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype headerPropsType = {\r\n    isAuth: boolean\r\n    login: string\r\n}\r\n\r\nfunction Header (props: headerPropsType) {\r\n    return (\r\n        <header className={s.header}>\r\n        <img src={\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQie3E0fOUC7Wzjg0m3zZMX44h4RqWOSJqM1cfgO0t2CeE2pmhc&usqp=CAU\"}/>\r\n\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth ? props.login : <NavLink to={\"/login\"}>Login</NavLink>}\r\n\r\n        </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import {authType} from \"./Types\";\r\nimport {userApi} from \"../API/api\";\r\n\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\";\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n}\r\n\r\nconst authReducer = (state: authType = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA:\r\n            debugger\r\n            return {\r\n                ...state,\r\n                id: action.data.id,\r\n                email: action.data.email,\r\n                login: action.data.login,\r\n                isAuth: true,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setUserData = (data: authType) => ({type: SET_USER_DATA, data})\r\n\r\nexport const checkAuth = () => {\r\n   return (dispatch: any) => {\r\n        userApi.checkAuth().then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch (setUserData (data.data))\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {checkAuth, setUserData} from \"../../Redux/authReducer\";\r\nimport {_stateType, authType} from \"../../Redux/Types\";\r\n\r\nclass HeaderContainer extends React.Component<any, any> {\r\n\r\n    componentDidMount() {\r\n        this.props.checkAuth()\r\n    }\r\n\r\n    render() {\r\n        return <Header isAuth={this.props.isAuth} login={this.props.login}/>;\r\n    }\r\n}\r\n\r\nconst mapsStateToProps = (state: _stateType) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n    }\r\n}\r\n\r\nexport default connect(mapsStateToProps, {setUserData, checkAuth})(HeaderContainer)","import React from \"react\";\r\n\r\ntype loginType = {\r\n\r\n}\r\n\r\nconst Login = (props: loginType) => {\r\n    return (\r\n        <h1>LOGIN</h1>\r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react';\nimport {BrowserRouter, HashRouter, Route} from \"react-router-dom\";\nimport './App.css';\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport Music from \"./Components/Music/Music\";\nimport News from \"./Components/News/News\";\nimport Settings from \"./Components/Settings/Settings\";\nimport {friendsType} from './Redux/Types';\nimport DialogsContainer from \"./Components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./Components/Users/UsersContainer\";\nimport ProfileContainer from \"./Components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\nimport Login from \"./Components/Login/Login\";\n\ntype propsType = {\n    stateForFriends: friendsType[],\n}\n\n\nfunction App(props: propsType) {\n\n    return (\n        <HashRouter>\n            <div className={\"app-wrapper\"}>\n                <HeaderContainer/>\n                <Navbar friends={props.stateForFriends}/>\n                <div className={\"app-wrapper-content\"}>\n                    <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                    <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                    <Route path='/news' render={() => <Music/>}/>\n                    <Route path='/music' render={() => <News/>}/>\n                    <Route path='/settings' render={() => <Settings/>}/>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n                    <Route path='/login' render={() => <Login/>}/>\n                </div>\n            </div>\n        </HashRouter>\n    );\n}\n\nexport default App;","import {friendsType} from \"./Types\";\r\n\r\nlet initialState = [\r\n    {name: \"David\", imgSource: \"https://greendestinations.org/wp-content/uploads/2019/05/avatar-exemple.jpg\"},\r\n    {name: \"Tigran\", imgSource: \"https://freesvg.org/img/myAvatar.png\"},\r\n    {name: \"Olga\", imgSource: \"https://st2.depositphotos.com/2703645/5669/v/950/depositphotos_56695985-stock-illustration-male-avatar.jpg\"},\r\n]\r\n\r\nconst friendsReducer = (state: friendsType[] = initialState, action: any) => {\r\n\r\n    return state\r\n}\r\n\r\nexport default friendsReducer;","import {applyMiddleware, combineReducers, createStore, Store} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport messageReducer from \"./messageReducer\";\r\nimport friendsReducer from \"./friendsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messageReducer,\r\n    usersPage: usersReducer,\r\n    friends: friendsReducer,\r\n    auth: authReducer,\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof reducers>\r\n\r\nlet store: Store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nexport default store","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from \"./Redux/reduxStore\";\nimport {Provider} from 'react-redux';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App stateForFriends={store.getState().friends}/>\n    </Provider>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}