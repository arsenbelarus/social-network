{"version":3,"sources":["HOC/withAuthRedirect.tsx","Redux/messageReducer.ts","Assets/Images/loader.gif","Components/Profile/MyPosts/Post/Post.module.css","Components/Navbar/Navbar.module.css","serviceWorker.ts","Components/Navbar/Navbar.tsx","Components/Music/Music.tsx","Components/News/News.tsx","Components/Settings/Settings.tsx","API/api.ts","Redux/usersReducer.ts","Components/Common/Paginator/Paginator.tsx","Components/Users/Users.tsx","Components/Common/Preloader/Preloader.tsx","Redux/user-selector.ts","Components/Users/UsersContainer.tsx","Components/Profile/ProfileInfo/ProfileStatusWtihHooks.tsx","Components/Profile/ProfileInfo/ProfileInfo.tsx","Redux/profileReducer.ts","Components/Profile/MyPosts/Post/Post.tsx","Components/Profile/MyPosts/AddPostForm.tsx","Components/Profile/MyPosts/MyPosts.tsx","Components/Profile/MyPosts/MyPostsContainer.tsx","Components/Profile/Profile.tsx","Components/Profile/ProfileContainer.tsx","Components/Header/Header.tsx","Redux/friendsReducer.ts","Redux/authReducer.ts","Components/Header/HeaderContainer.tsx","Components/Login/LoginForm.tsx","Components/Login/Login.tsx","Redux/appReducer.ts","Components/Friends/Friends.tsx","Components/Friends/FriendsContainer.tsx","App.tsx","Redux/reduxStore.ts","index.tsx","Utils/Validation/validators.ts","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Common/FormControls/FormControls.module.css","Assets/Images/avatar.jpg","Components/Common/FormControls/FormControls.tsx","Components/Users/Users.module.css","Components/Friends/Friends.module.css","Components/Common/Paginator/Paginator.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Header/Header.module.css"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","addMessageActionCreator","newMessageBody","type","initialState","dialogsData","id","name","messagesDataLeft","message","messagesDataRight","newMessageText","messageReducer","action","newMessage","module","exports","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","activeClassName","activeLink","Music","News","Settings","axiosInstance","axios","create","withCredentials","baseURL","headers","userApi","currentPage","pageSize","get","then","response","data","userId","post","delete","console","log","profileApi","getProfile","friends","getStatus","updateStatus","status","put","savePhoto","photo","formData","FormData","append","loginApi","users","totalUsersCount","isFetching","isFollowStatusChanging","setUsers","toggleIsFetching","toggleFollowStatusChanging","usersReducer","map","u","followed","totalUsersQuantity","filter","Paginator","pagesNumber","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","pagination","onClick","p","index","key","selectedPage","style","cursor","onPaginationClickHandler","Users","userContainer","imageAndButtonContainer","src","photos","small","avatarLogo","usersPhoto","button","disabled","some","unFollow","follow","userInformation","Preloader","width","margin","loader","height","getUsersSelector","createSelector","usersPage","getPageSizeSelector","getTotalUsersCountSelector","getCurrentPageSelector","getIsFetchingSelector","getIsFollowStatusChangingSelector","UsersContainer","pageNumber","getUsers","toggleIsFollowStatusChanging","compose","dispatch","resultCode","followSuccess","setCurrentPage","items","totalCount","unFollowSuccess","ProfileStatusWithHooks","editMode","setEditMode","setStatus","useEffect","description","onDoubleClick","TextField","variant","value","onChange","e","currentTarget","onBlur","update","autoFocus","ProfileInfo","profile","large","alt","isOwner","target","files","length","fullName","contacts","facebook","postsData","likesCount","setUserStatus","profileReducer","newPost","addNewPost","Post","maxLength10","maxLength","AddPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","requiredField","MyPosts","memo","postElements","posts","main","values","addPost","MyPostsContainer","profilePage","addPostActionCreator","Profile","ProfileContainer","params","authorisedId","history","getUserProfile","getUserStatus","goToProfile","prevProps","prevState","content","updateUserStatus","withRouter","file","Header","header","loginBlock","login","logout","setFriends","getFriends","friendsReducer","email","setUserData","payload","checkAuth","authReducer","HeaderContainer","maxLength50","LoginReduxForm","Input","display","error","formSummaryError","password","rememberMe","formErrorMessage","messages","stopSubmit","_error","initialised","appReducer","Friends","friendsElements","f","friend","friendName","FriendsContainer","friendsPage","DialogsContainer","lazy","App","initialiseApp","path","render","Suspense","fallback","gridArea","backgroundColor","app","checkAuthResult","Promise","all","reducers","combineReducers","messagesPage","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","input","meta","hasError","touched","formControl"],"mappings":"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","file":"static/js/main.22c8159f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {_stateType} from \"../Redux/Types\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToPropsForRedirect = (state: _stateType) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component: any) => {\r\n    class RedirectComponent extends React.Component<any, any> {\r\n        render() {\r\n            if(!this.props.isAuth) {return <Redirect to={\"/login\"}/>};\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}","import {messagesPageType} from \"./Types\";\r\n\r\nconst addMessage = \"ADD-MESSAGE\";\r\n\r\nexport const addMessageActionCreator = (newMessageBody: string) => {return {type: addMessage, newMessageBody}}\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        {id: 1, name: \"Arsen\"},\r\n        {id: 2, name: \"Olya\"},\r\n        {id: 3, name: \"Tigran\"},\r\n        {id: 4, name: \"David\"},\r\n    ],\r\n    messagesDataLeft: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"How are you\"},\r\n        {id: 3, message: \"Hello world\"},\r\n        {id: 4, message: \"Lorem ipsum\"},\r\n    ],\r\n    messagesDataRight: [\r\n        {id: 1, message: \"I love my wife\"},\r\n        {id: 2, message: \"fg gfdgsdfg g fd\"},\r\n        {id: 3, message: \"fg dfgdf dfg \"},\r\n        {id: 4, message: \" fd sgdf dfg df \"},\r\n    ],\r\n    newMessageText: \"\",\r\n}\r\n\r\nconst messageReducer = (state: messagesPageType = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case addMessage:\r\n            let newMessage = {id: 5, message: action.newMessageBody,}\r\n            return {\r\n                ...state,\r\n                messagesDataLeft: [...state.messagesDataLeft, newMessage],\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default messageReducer;\r\n","module.exports = __webpack_public_path__ + \"static/media/loader.181849d9.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3YEHT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__7zjwi\",\"item\":\"Navbar_item__2dKJe\",\"activeLink\":\"Navbar_activeLink__3dRIm\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype propsType = {\r\n\r\n}\r\nfunction Navbar(props: propsType) {\r\n    return (\r\n        <div className={s.nav}>\r\n            <nav>\r\n                <div className={s.item}>\r\n                    <NavLink to={\"/profile\"} activeClassName={s.activeLink}> Profile </NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={\"/dialogs\"} activeClassName={s.activeLink}> Messages</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={\"/users\"} activeClassName={s.activeLink}> Users</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={\"/news\"} activeClassName={s.activeLink}> News</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={\"/music\"} activeClassName={s.activeLink}> Music</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={\"/settings\"} activeClassName={s.activeLink}> Settings</NavLink>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\n\r\nfunction Music() {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\n\r\nfunction News() {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\n\r\nfunction Settings() {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings","import axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"a318ecb3-f5df-4512-99ed-aabe354d9b6f\"\r\n    },\r\n})\r\n\r\nexport const userApi = {\r\n    getUsers (currentPage: number = 1, pageSize: number = 100) {\r\n        return axiosInstance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    checkAuth () {\r\n        return axiosInstance.get('auth/me')\r\n            .then(response => response.data)\r\n    },\r\n    follow (userId: number) {\r\n        return axiosInstance.post(`follow/${userId}`, {})\r\n            .then(response => response.data)\r\n    },\r\n    unFollow (userId: number) {\r\n        return axiosInstance.delete(`follow/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    getProfile (userId: number) {\r\n        console.log(\"Obsolete method. Please use profileApi\")\r\n        return profileApi.getProfile(userId)\r\n    },\r\n    getFriends (friends: boolean, pageSize: number = 100) {\r\n        return axiosInstance.get(`users?friend=${friends}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n}\r\n\r\nexport const profileApi = {\r\n    getProfile (userId: number) {\r\n        return axiosInstance.get(`profile/${userId}`)\r\n    },\r\n    getStatus (userId: number) {\r\n        return axiosInstance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus (status: string) {\r\n        return axiosInstance.put(\"profile/status\", {status: status})\r\n    },\r\n    savePhoto (photo: File) {\r\n        const formData = new FormData()\r\n        formData.append(\"image\", photo)\r\n        return axiosInstance.put(\"profile/photo\", formData, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const loginApi = {\r\n    signIn (data: {email: string, password: string|number, rememberMe?: boolean, captcha?: boolean} ) {\r\n        return axiosInstance.post(\"auth/login\", data)\r\n    },\r\n    signOut () {\r\n        return axiosInstance.delete(\"auth/login\")\r\n    }\r\n}\r\n\r\n\r\n","import {usersPageType, usersType} from \"./Types\";\r\nimport {userApi} from \"../API/api\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_QUANTITY = \"SET_TOTAL_USERS_QUANTITY\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_FOLLOW_STATUS_CHANGING = \"TOGGLE_FOLLOW_STATUS_CHANGING\";\r\n\r\nlet initialState: usersPageType = {\r\n    users: [],\r\n    pageSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    isFollowStatusChanging: [],\r\n}\r\n\r\n\r\nconst usersReducer = (state: usersPageType = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage,\r\n            }\r\n\r\n        case SET_TOTAL_USERS_QUANTITY:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersQuantity,\r\n            }\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            }\r\n        case TOGGLE_FOLLOW_STATUS_CHANGING:\r\n            return {\r\n                ...state,\r\n                isFollowStatusChanging: action.isFollowStatusChanging\r\n                    ? [...state.isFollowStatusChanging, action.userId]\r\n                    : state.isFollowStatusChanging.filter(id => id !== action.userId),\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n// Action creators\r\nexport const followSuccess = (userId: number) => ({type: FOLLOW, userId});\r\nexport const unFollowSuccess = (userId: number) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users: usersType[]) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersQuantity = (totalUsersQuantity: number) => ({\r\n    type: SET_TOTAL_USERS_QUANTITY,\r\n    totalUsersQuantity\r\n});\r\nexport const toggleIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowStatusChanging = (isFollowStatusChanging: boolean, userId: number) =>\r\n    ({type: TOGGLE_FOLLOW_STATUS_CHANGING, isFollowStatusChanging, userId});\r\n\r\n\r\n// Thunk creators\r\nexport const getUsers = (currentPage: number, pageSize: number) => {\r\n    return (dispatch: any) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setUsers([]));\r\n        dispatch(setCurrentPage(currentPage));\r\n        userApi.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersQuantity(data.totalCount));\r\n        });\r\n    }\r\n}\r\nexport const unFollow = (userId: number) => {\r\n    return (dispatch: any) => {\r\n        dispatch (toggleFollowStatusChanging(true, userId))\r\n        userApi.unFollow(userId).then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch (unFollowSuccess(userId))\r\n            }\r\n            dispatch (toggleFollowStatusChanging(false, userId))\r\n        });\r\n    }\r\n}\r\nexport const follow = (userId: number) => {\r\n    return (dispatch: any) => {\r\n        dispatch (toggleFollowStatusChanging(true, userId))\r\n        userApi.follow(userId).then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch (followSuccess(userId))\r\n            }\r\n            dispatch (toggleFollowStatusChanging(false, userId))\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;","import React, {useState} from \"react\";\r\nimport s from \"./Paginator.module.css\";\r\nimport {Pagination} from \"@material-ui/lab\";\r\n\r\ntype paginatorPropsType = {\r\n    totalUsersCount: number,\r\n    pageSize: number,\r\n    currentPage: number,\r\n    onPaginationClickHandler: (p: number) => void,\r\n}\r\n\r\nconst Paginator = (props: paginatorPropsType) => {\r\n    let pagesNumber = Math.ceil(props.totalUsersCount / props.pageSize)\r\n\r\n    let pages = []\r\n    for (let i = 1; i <= pagesNumber; i++) {\r\n        pages.push(i)\r\n    }\r\n    let portionSize = 10;\r\n    let portionCount = Math.ceil(pagesNumber/portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return (\r\n            <div className={s.pagination}>\r\n                {portionNumber > 1 &&\r\n                <button onClick={() => {setPortionNumber(portionNumber - 1)}}> Previous </button>}\r\n\r\n                {pages\r\n                    .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                    .map((p, index) =>\r\n                    <span key={index} className={(props.currentPage === p) ? s.selectedPage : \"\"}\r\n                          style={{cursor: \"pointer\"}}\r\n                          onClick={() => {\r\n                              props.onPaginationClickHandler(p)\r\n                          }}> {p} </span>\r\n                )}\r\n                {portionCount > portionNumber &&\r\n                <button onClick={() => {setPortionNumber(portionNumber + 1)}}> Next </button>}\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Paginator","import React from \"react\"\r\nimport s from \"./Users.module.css\"\r\nimport {usersType} from \"../../Redux/Types\";\r\nimport avatarLogo from \"../../Assets/Images/avatar.jpg\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\n\r\ntype UsersPropsType = {\r\n    totalUsersCount: number;\r\n    pageSize: number;\r\n    currentPage: number;\r\n    users: Array<usersType>;\r\n    unFollow: (id: number) => void;\r\n    follow: (id: number) => void;\r\n    onPaginationClickHandler: (p: number) => void;\r\n    isFollowStatusChanging: Array<number>;\r\n    toggleIsFollowStatusChanging: (isFollowStatusChanging: boolean, userId: number) => void\r\n}\r\n\r\nconst Users = (props: UsersPropsType) => {\r\n\r\n    return (\r\n        <div>\r\n            <Paginator totalUsersCount={props.totalUsersCount} pageSize={props.pageSize}\r\n                       currentPage={props.currentPage} onPaginationClickHandler={props.onPaginationClickHandler}/>\r\n            {\r\n                props.users.map((u: usersType) =>\r\n                    <div key={u.id} className={s.userContainer}>\r\n                        <div className={s.imageAndButtonContainer}>\r\n                            <div>\r\n                                <NavLink to={\"/profile/\" + u.id}>\r\n                                    <img src={u.photos.small ? u.photos.small : avatarLogo} className={s.usersPhoto}/>\r\n                                </NavLink>\r\n                            </div>\r\n                            <div className={s.button}>\r\n                                {u.followed\r\n                                    ? <button disabled={props.isFollowStatusChanging.some(id => id === u.id)} onClick={() => props.unFollow(u.id)}>UnFollow</button>\r\n                                    : <button disabled={props.isFollowStatusChanging.some(id => id === u.id)} onClick={() => props.follow(u.id)}>Follow</button>}\r\n                            </div>\r\n                        </div>\r\n                        <span className={s.userInformation}>\r\n                            <span>\r\n                                <div>{u.name}</div>\r\n                                <div>{u.status}</div>\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users","import React from \"react\";\r\nimport loader from \"../../../Assets/Images/loader.gif\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div style={{width: \"100px\", margin: \"0 auto\"}}>\r\n            <img src={loader} style={{width: \"100px\", height: \"60px\"}}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","import {_stateType} from \"./Types\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nconst getUsersPrimitiveSelector = (state: _stateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsersSelector = createSelector(getUsersPrimitiveSelector, (users) => {return users.filter(u => true)})\r\n\r\n\r\nexport const getPageSizeSelector = (state: _stateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCountSelector = (state: _stateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPageSelector = (state: _stateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetchingSelector = (state: _stateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getIsFollowStatusChangingSelector = (state: _stateType) => {\r\n    return state.usersPage.isFollowStatusChanging\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {_stateType} from \"../../Redux/Types\";\r\nimport {\r\n    follow,\r\n    getUsers,\r\n    toggleFollowStatusChanging,\r\n    unFollow,\r\n} from \"../../Redux/usersReducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPageSelector, getIsFetchingSelector, getIsFollowStatusChangingSelector,\r\n    getPageSizeSelector,\r\n    getTotalUsersCountSelector,\r\n    getUsersSelector\r\n} from \"../../Redux/user-selector\";\r\n\r\n\r\nclass UsersContainer extends React.Component<any> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPaginationClickHandler = (pageNumber: number) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   follow={this.props.follow}\r\n                   unFollow={this.props.unFollow}\r\n                   isFollowStatusChanging = {this.props.isFollowStatusChanging}\r\n                   toggleIsFollowStatusChanging = {this.props.toggleIsFollowStatusChanging}\r\n                   onPaginationClickHandler={this.onPaginationClickHandler}\r\n                   users={this.props.users}/>\r\n        </>\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: _stateType) => {\r\n    return {\r\n        users: getUsersSelector(state),\r\n        pageSize: getPageSizeSelector(state),\r\n        totalUsersCount: getTotalUsersCountSelector(state),\r\n        currentPage: getCurrentPageSelector(state),\r\n        isFetching: getIsFetchingSelector(state),\r\n        isFollowStatusChanging: getIsFollowStatusChangingSelector(state),\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect (mapStateToProps, {follow,\r\n        toggleFollowStatusChanging, getUsers, unFollow})\r\n)(UsersContainer)\r\n","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport {profileType} from \"../../../Redux/Types\";\r\nimport s from './ProfileInfo.module.css';\r\nimport {TextField} from \"@material-ui/core\";\r\n\r\ntype propsType = {\r\n    profile: profileType,\r\n    status: string,\r\n    update: (status: string) => void,\r\n}\r\n\r\nconst ProfileStatusWithHooks = (props: propsType) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => setEditMode(true)\r\n    const activateViewMode = () => {\r\n        setEditMode(false)\r\n        props.update(status)\r\n    }\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => setStatus(e.currentTarget.value)\r\n\r\n    return (\r\n        <>\r\n            {!editMode &&\r\n            <div className={s.description}>\r\n                <span onDoubleClick={activateEditMode}>{props.status}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div className={s.description}>\r\n                <TextField variant={\"outlined\"} type=\"text\" value={status}\r\n                           onChange={onStatusChange} onBlur={activateViewMode} autoFocus={true} />\r\n            </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React, {ChangeEvent} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport {profileType} from \"../../../Redux/Types\";\r\nimport avatarLogo from \"../../../Assets/Images/avatar.jpg\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWtihHooks\";\r\n\r\n\r\ntype propsType = {\r\n    profile: profileType,\r\n    status: string,\r\n    update: (status: string) => void,\r\n    isOwner: boolean,\r\n    savePhoto: (e: File) => void,\r\n}\r\n\r\nfunction ProfileInfo(props: propsType) {\r\n\r\n    const photoUploadHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            props.savePhoto (e.target.files[0])\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            {props.profile &&\r\n                <div>\r\n                    <div className={s.description}>\r\n                        <img src={props.profile.photos.large || avatarLogo} alt=\"large avatar\"/>\r\n                        {props.isOwner && <input type={\"file\"} onChange={photoUploadHandler}/>}\r\n                    </div>\r\n                    <div className={s.description}>\r\n                        {props.profile.fullName}\r\n                    </div>\r\n                    <div className={s.description}>\r\n                        {props.profile.contacts.facebook}\r\n                    </div>\r\n                    <ProfileStatusWithHooks profile={props.profile} status={props.status} update={props.update}/>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import {photosType, profilePageType, profileType} from \"./Types\";\r\nimport {profileApi, userApi} from \"../API/api\";\r\nconst addPost = \"ADD-POST\";\r\nconst SET_USERS_PROFILE = \"SET_USERS_PROFILE\";\r\nconst SET_USER_STATUS = \"SET_USER_STATUS\";\r\nconst SET_USER_PHOTO = \"SET_USER_PHOTO\";\r\nconst DELETE_POST = \"DELETE_POST\";\r\n\r\n\r\nlet initialState = {\r\n    profile: null,\r\n    status: \"\",\r\n    postsData: [\r\n        {id: 1, message: \"How are you?\", likesCount: 15},\r\n        {id: 2, message: \"It's my first post\", likesCount: 20},\r\n        {id: 3, message: \"I want to learn React\", likesCount: 35},\r\n        {id: 4, message: \"Lorem ipsum\", likesCount: 1},\r\n    ],\r\n}\r\n\r\nconst profileReducer = (state: profilePageType = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n        case addPost:\r\n            let newPost = {id: 5, message: action.addNewPost, likesCount: 0}\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                postsData: state.postsData.filter(p => p.id !== action.id),\r\n            }\r\n        case SET_USERS_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_USER_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case SET_USER_PHOTO:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (addNewPost: string) => {\r\n    return {type: addPost, addNewPost}\r\n}\r\nexport const deletePostActionCreator = (id: number) => {\r\n    return {type: DELETE_POST, id}\r\n}\r\nconst setUsersProfile = (profile: profileType) => ({type: SET_USERS_PROFILE, profile})\r\nconst setUserStatus = (status: string) => ({type: SET_USER_STATUS, status})\r\nconst setUserPhoto = (photos: photosType) => ({type: SET_USER_PHOTO, photos})\r\n\r\nexport const getUserProfile = (userId: number) => {\r\n    return (dispatch: any) => {\r\n        userApi.getProfile(userId)\r\n            .then(response => {\r\n                dispatch(setUsersProfile(response.data))\r\n            })\r\n    }\r\n}\r\n\r\nexport const getUserStatus = (userId: number) => {\r\n    return (dispatch: any) => {\r\n        profileApi.getStatus(userId).then(response => {\r\n            dispatch(setUserStatus(response.data))\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateUserStatus = (status: string) => {\r\n    return (dispatch: any) => {\r\n        profileApi.updateStatus(status).then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setUserStatus(status))\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file: File) => {\r\n    return (dispatch: any) => {\r\n        profileApi.savePhoto(file)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(setUserPhoto(response.data.data.photos))\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\ntype propsType = {\r\n    message: string,\r\n    likesCount: number\r\n};\r\n\r\nfunction Post (props: propsType) {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src={\"https://greendestinations.org/wp-content/uploads/2019/05/avatar-exemple.jpg\"}/>\r\n            {props.message}\r\n            <div>\r\n                <span>{props.likesCount}  likes</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react';\r\nimport {Field, reduxForm, SubmitHandler} from \"redux-form\";\r\nimport {maxLength, requiredField} from \"../../../Utils/Validation/validators\";\r\nimport {Textarea} from \"../../Common/FormControls/FormControls\";\r\n\r\ntype propsType = {\r\n    handleSubmit: SubmitHandler;\r\n}\r\nconst maxLength10 = maxLength(10);\r\n\r\nfunction AddPostForm(props: propsType) {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field component={Textarea} name={\"addNewPost\"}\r\n                           placeholder={\"Add your post here\"} validate={[requiredField, maxLength10]}/>\r\n                </div>\r\n                <div>\r\n                    <button>Add post</button>\r\n                </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const AddPostReduxForm = reduxForm({\r\n    form: 'AddPost'\r\n})(AddPostForm)","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {AddPostReduxForm} from \"./AddPostForm\";\r\n\r\ntype propsType = {\r\n    posts: Array<{ id: number, message: string, likesCount: number }>,\r\n    addPost: (addNewPost: string) => void,\r\n}\r\n\r\n\r\n\r\nconst MyPosts = React.memo((props: propsType) => {\r\n    let postElements = props.posts.map((p,i) => <Post key={i} message ={p.message} likesCount = {p.likesCount} />)\r\n\r\n    const addPost = (addNewPost: string) => {\r\n        props.addPost(addNewPost);\r\n    }\r\n\r\n    const onSubmit = (values: any) => {\r\n        addPost(values.addNewPost)\r\n    }\r\n\r\n    return (\r\n        <div className={s.main}>\r\n            <h3> My posts </h3>\r\n            <AddPostReduxForm onSubmit={onSubmit}/>\r\n            <div className={s.posts}>  {postElements}  </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default MyPosts","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../Redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {_stateType} from \"../../../Redux/Types\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state: _stateType) => {\r\n    return {\r\n        posts: state.profilePage.postsData,\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        addPost: (addNewPost: string) => {\r\n            dispatch ( addPostActionCreator(addNewPost) )\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {profileType} from \"../../Redux/Types\";\r\n\r\ntype propsType = {\r\n    profile: profileType,\r\n    status: string,\r\n    update: (status: string) => void,\r\n    isOwner: boolean,\r\n    savePhoto: (e: File) => void,\r\n}\r\n\r\nfunction Profile(props: propsType) {\r\n\r\n    return (\r\n        <div >\r\n            <ProfileInfo profile={props.profile} status={props.status} update={props.update}\r\n                         isOwner={props.isOwner} savePhoto={props.savePhoto}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {_stateType} from \"../../Redux/Types\";\r\nimport {getUserProfile, getUserStatus, savePhoto, updateUserStatus} from \"../../Redux/profileReducer\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component<any> {\r\n\r\n    goToProfile () {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorisedId\r\n            if(!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getUserStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.goToProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<any>, prevState: Readonly<{}>) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.goToProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className={s.content}>\r\n            <Profile profile={this.props.profile} status={this.props.status}\r\n                     update={this.props.updateUserStatus} isOwner={!this.props.match.params.userId}\r\n                     savePhoto={this.props.savePhoto}/>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: _stateType) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorisedId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    withRouter,\r\n    connect (mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus, savePhoto}),\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype headerPropsType = {\r\n    isAuth: boolean\r\n    login: string\r\n    logout: () => void\r\n}\r\n\r\nfunction Header (props: headerPropsType) {\r\n    return (\r\n        <header className={s.header}>\r\n        <img src={\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQie3E0fOUC7Wzjg0m3zZMX44h4RqWOSJqM1cfgO0t2CeE2pmhc&usqp=CAU\"}/>\r\n\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth\r\n                ? <div> { props.login } --- <button onClick={props.logout}> Log out </button> </div>\r\n                : <NavLink to={\"/login\"}>Login</NavLink>}\r\n\r\n        </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import {friendsPageType, friendsType} from \"./Types\";\r\nimport {userApi} from \"../API/api\";\r\n\r\nconst SET_FRIENDS = \"SET_FRIENDS\";\r\n\r\nlet initialState: friendsPageType = {\r\n    friends: [],\r\n}\r\n\r\nconst friendsReducer = (state = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case \"SET_FRIENDS\":\r\n            return {\r\n                ...state,\r\n                friends: action.friends\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n// Action creators\r\nexport const setFriends = (friends: friendsType[]) => ({type: SET_FRIENDS, friends});\r\n\r\n// Thunk creators\r\nexport const getFriends = () => {\r\n    return (dispatch: any) => {\r\n        userApi.getFriends(true).then(data => {\r\n            dispatch(setFriends(data.items));\r\n        });\r\n    }\r\n}\r\n\r\nexport default friendsReducer;","import {authType} from \"./Types\";\r\nimport {loginApi, userApi} from \"../API/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getFriends, setFriends} from \"./friendsReducer\";\r\n\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\";\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n}\r\n\r\nconst authReducer = (state: authType = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setUserData = (id: number|null, email: string|null, login: string|null, isAuth: boolean) =>\r\n    ({type: SET_USER_DATA, payload: {id, email, login, isAuth}})\r\n\r\nexport const checkAuth = () => {\r\n   return (dispatch: any) => {\r\n       return userApi.checkAuth()\r\n           .then(data => {\r\n            if (data.resultCode === 0) {\r\n                let {id, login, email} = data.data\r\n                dispatch (setUserData (id, email, login, true))\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const login = (email: string, password: string|number, rememberMe: boolean) => {\r\n    return (dispatch: any) => {\r\n        loginApi.signIn({email, password, rememberMe})\r\n            .then(data => {\r\n            if (data.data.resultCode === 0) {\r\n                dispatch (checkAuth())\r\n                dispatch (getFriends())\r\n            } else {\r\n                let formErrorMessage = data.data.messages.length > 0 ? data.data.messages : \"Error occurred\";\r\n                dispatch(stopSubmit(\"login\", {_error: `${formErrorMessage}`}))\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return (dispatch: any) => {\r\n        loginApi.signOut()\r\n            .then(data => {\r\n            if (data.data. resultCode === 0) {\r\n                dispatch (setUserData (null, null, null, false))\r\n                dispatch (setFriends([]))\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport { logout } from \"../../Redux/authReducer\";\r\nimport {_stateType} from \"../../Redux/Types\";\r\n\r\nclass HeaderContainer extends React.Component<any, any> {\r\n\r\n    render() {\r\n        return <Header isAuth={this.props.isAuth} login={this.props.login} logout={this.props.logout}/>;\r\n    }\r\n}\r\n\r\nconst mapsStateToProps = (state: _stateType) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n    }\r\n}\r\n\r\nexport default connect(mapsStateToProps, {logout})(HeaderContainer)","import React from \"react\";\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {Input} from \"../Common/FormControls/FormControls\";\r\nimport {maxLength, requiredField} from \"../../Utils/Validation/validators\";\r\nimport s from \"../Common/FormControls/FormControls.module.css\"\r\n\r\ntype loginFormType = {\r\n    handleSubmit: any;\r\n    error: string;\r\n}\r\n\r\nconst maxLength10 = maxLength(10);\r\nconst maxLength50 = maxLength(50);\r\n\r\nlet LoginForm = (props: loginFormType) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field type={\"text\"} name={\"email\"} component={Input} placeholder={\"email\"}\r\n                       validate={[requiredField, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <Field type={\"password\"} name={\"password\"} component={Input} placeholder={\"password\"}\r\n                       validate={[requiredField, maxLength10]}/>\r\n            </div>\r\n            <div style={{display: \"inline-flex\"}}>\r\n                <Field type={\"checkbox\"} name={\"rememberMe\"} component={Input}/> <span>remember me</span>\r\n            </div>\r\n            {props.error &&\r\n            <div className={s.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n            <div>\r\n                <button>Sign in</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const LoginReduxForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'login'\r\n})(LoginForm)","import React from \"react\";\r\nimport {LoginReduxForm} from \"./LoginForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {login, logout} from \"../../Redux/authReducer\";\r\nimport {_stateType} from \"../../Redux/Types\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\ntype loginType = {\r\n    login: (email: string, password: string|number, rememberMe: boolean) => void,\r\n    isAuth: boolean,\r\n}\r\n\r\nconst Login = (props: loginType) => {\r\n    const onSubmit = (formData: any) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>LOGIN</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: _stateType) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, {login, logout})(Login)","import {checkAuth} from \"./authReducer\";\r\nimport {appType} from \"./Types\";\r\n\r\n\r\nconst INITIALISED_SUCCESFULLY = \"INITIALISED_SUCCESFULLY\";\r\n\r\nlet initialState = {\r\n    initialised: false\r\n}\r\n\r\nconst appReducer = (state: appType = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case INITIALISED_SUCCESFULLY:\r\n            return {\r\n                ...state,\r\n                initialised: true,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initialisedSuccessfully = () => ({type: INITIALISED_SUCCESFULLY})\r\n\r\nexport const initialiseApp = () => (dispatch: any) => {\r\n    let checkAuthResult = dispatch(checkAuth())\r\n    Promise.all([checkAuthResult])\r\n        .then(() => {\r\n            dispatch(initialisedSuccessfully())\r\n        })\r\n}\r\n\r\nexport default appReducer;","import React from 'react';\r\nimport s from './Friends.module.css';\r\nimport {friendsType} from \"../../Redux/Types\";\r\nimport avatarLogo from \"../../Assets/Images/avatar.jpg\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype propsType = {\r\n    friends: friendsType[],\r\n}\r\n\r\nfunction Friends(props: propsType) {\r\n\r\n    let friendsElements = props.friends.map((f, index) =>\r\n        <div className={s.friend} key={index}>\r\n            <NavLink to={\"/profile/\" + f.id}>\r\n                <img src={f.photos.small ? f.photos.small : avatarLogo} alt={\"\"}/>\r\n            </NavLink>\r\n            <div className={s.friendName}>\r\n                {f.name}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n\r\n            <h2>Friends</h2>\r\n\r\n            <div className={s.friends}>\r\n                {friendsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friends","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {_stateType} from \"../../Redux/Types\";\r\nimport Friends from \"./Friends\";\r\nimport {getFriends} from \"../../Redux/friendsReducer\";\r\n\r\n\r\nclass FriendsContainer extends React.Component<any> {\r\n\r\n    componentDidMount() {\r\n        this.props.getFriends()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Friends friends={this.props.friends}/>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: _stateType) => {\r\n    return {\r\n        friends: state.friendsPage.friends,\r\n    }\r\n}\r\n\r\nexport default connect (mapStateToProps, {getFriends})(React.memo(FriendsContainer))\r\n","import React from 'react';\nimport {Route} from \"react-router-dom\";\nimport './App.css';\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport Music from \"./Components/Music/Music\";\nimport News from \"./Components/News/News\";\nimport Settings from \"./Components/Settings/Settings\";\nimport {_stateType} from './Redux/Types';\nimport UsersContainer from \"./Components/Users/UsersContainer\";\nimport ProfileContainer from \"./Components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\nimport Login from \"./Components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {initialiseApp} from \"./Redux/appReducer\";\nimport Preloader from \"./Components/Common/Preloader/Preloader\";\nimport FriendsContainer from \"./Components/Friends/FriendsContainer\";\nconst DialogsContainer = React.lazy(() => import(\"./Components/Dialogs/DialogsContainer\"))\n\n\nclass App extends React.Component<any, any> {\n    componentDidMount() {\n        this.props.initialiseApp()\n    }\n\n    render() {\n        if (!this.props.initialised) {\n            return <Preloader/>\n        }\n        return (\n\n            <div className={\"app-wrapper\"}>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className={\"app-wrapper-content\"}>\n                    <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                    <Route path='/dialogs' render={() => {\n                        return <React.Suspense fallback={<Preloader/>}>\n                                     <DialogsContainer/>\n                               </React.Suspense>\n                    }}/>\n                    <Route path='/news' render={() => <Music/>}/>\n                    <Route path='/music' render={() => <News/>}/>\n                    <Route path='/settings' render={() => <Settings/>}/>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n                    <Route path='/login' render={() => <Login/>}/>\n                </div>\n                <div style={{gridArea: \"r\", backgroundColor: \"black\"}}>\n                    <FriendsContainer/>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state: _stateType) => ({\n    initialised: state.app.initialised\n})\n\nexport default connect(mapStateToProps, {initialiseApp})(App);","import {applyMiddleware, combineReducers, createStore, Store} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport messageReducer from \"./messageReducer\";\r\nimport friendsReducer from \"./friendsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport { reducer as formReducer } from \"redux-form\"\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messageReducer,\r\n    usersPage: usersReducer,\r\n    friendsPage: friendsReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer,\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof reducers>\r\n\r\nlet store: Store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nexport default store","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from \"./Redux/reduxStore\";\nimport {Provider} from 'react-redux';\nimport {HashRouter} from \"react-router-dom\";\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter>\n            <App/>\n        </HashRouter>\n    </Provider>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const requiredField = (value: string) => {\r\n    if(value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLength = (maxLength: number) => (value: string) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileInfo_description__1tfyt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__ZYcM1\",\"error\":\"FormControls_error__3I2i7\",\"formSummaryError\":\"FormControls_formSummaryError__2CIQE\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.64830c49.jpg\";","import React from \"react\";\r\nimport s from \"./FormControls.module.css\"\r\n\r\ntype propsType = {}\r\n\r\n// @ts-ignore\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n            <div>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            {hasError &&  <span>{meta.error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\n// @ts-ignore\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            {hasError &&  <span>{meta.error}</span> }\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPhoto\":\"Users_usersPhoto__2cLG_\",\"userContainer\":\"Users_userContainer__PLg5V\",\"imageAndButtonContainer\":\"Users_imageAndButtonContainer__3Yr9E\",\"button\":\"Users_button__2GMTj\",\"userInformation\":\"Users_userInformation__3W_DY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__22q5d\",\"friend\":\"Friends_friend__2--Sd\",\"friendName\":\"Friends_friendName__3AgSy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__3QJY_\",\"pagination\":\"Paginator_pagination__1WvrG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"MyPosts_main__PN3Os\",\"posts\":\"MyPosts_posts__1PK4X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__l2oe9\",\"loginBlock\":\"Header_loginBlock__Zic5-\"};"],"sourceRoot":""}