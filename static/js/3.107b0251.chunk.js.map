{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","Components/Dialogs/DialogItem/DialogItem.module.css","Components/Dialogs/MessageItem/Message.module.css","Components/Dialogs/DialogItem/DialogItem.tsx","Components/Dialogs/MessageItem/Message.tsx","Components/Dialogs/AddMessageForm.tsx","Components/Dialogs/Dialogs.tsx","Components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","DialogItem","props","className","s","dialog","active","src","to","id","name","Message","message","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","MyTextarea","placeholder","Dialogs","dialogElements","messages","dialogsData","map","d","key","messageElementsLeft","messagesDataLeft","m","messageElementsRight","messagesDataRight","dialogs","dialogsItems","messagesRow","messagesCell1","values","newMessageBody","addMessage","messagesCell2","compose","withAuthRedirect","connect","state","messagesPage","newMessageText","dispatch","addMessageActionCreator"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,0BAA0B,YAAc,6BAA6B,cAAgB,+BAA+B,cAAgB,iC,oBCAjPD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,6B,oBCA/DD,EAAOC,QAAU,CAAC,QAAU,2B,iHCiBbC,MATf,SAAoBC,GAChB,OACI,yBAAKC,UAAS,UAAKC,IAAEC,OAAP,YAAiBD,IAAEE,SAC7B,yBAAKC,IAAK,gFACV,kBAAC,IAAD,CAASC,GAAI,YAAcN,EAAMO,IAAjC,IAAuCP,EAAMQ,KAA7C,O,kBCEGC,MARf,SAAiBT,GACb,OACQ,yBAAKC,UAAWC,IAAEQ,SACbV,EAAMU,U,0BCehB,IAAMC,EAAsBC,YAAU,CACzCC,KAAM,cADyBD,EAhBnC,SAAwBZ,GAEpB,OACI,0BAAMc,SAAUd,EAAMe,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAYV,KAAM,iBAAkBW,YAAa,6BAEvE,6BACI,sDC+BDC,MAlCf,SAAiBpB,GACb,IAAIqB,EAAiBrB,EAAMsB,SAASC,YAAYC,KAAI,SAACC,GAAD,OAAsC,kBAAC,EAAD,CAAYjB,KAAMiB,EAAEjB,KACRD,GAAIkB,EAAElB,GAAImB,IAAKD,EAAElB,QACnHoB,EAAsB3B,EAAMsB,SAASM,iBAAiBJ,KAAI,SAACK,GAAD,OAA6B,kBAAC,EAAD,CAASnB,QAASmB,EAAEnB,aAC3GoB,EAAuB9B,EAAMsB,SAASS,kBAAkBP,KAAI,SAACK,GAAD,OAA6B,kBAAC,EAAD,CAASnB,QAASmB,EAAEnB,aAUjH,OACI,yBAAKT,UAAWC,IAAE8B,SACd,yBAAK/B,UAAWC,IAAE+B,cACbZ,GAEL,yBAAKpB,UAAWC,IAAEoB,UACd,yBAAKrB,UAAWC,IAAEgC,aACd,yBAAKjC,UAAWC,IAAEiC,eACbR,EACD,kBAAChB,EAAD,CAAqBG,SAbxB,SAACsB,GAJC,IAACC,IAKLD,EAAOC,eAJlBrC,EAAMsC,WAAWD,OAkBL,yBAAKpC,UAAWC,IAAEqC,eACbT,O,wBCjBVU,sBACXC,IACAC,aAjBoB,SAACC,GACrB,MAAO,CACHrB,SAAUqB,EAAMC,aAChBC,eAAgBF,EAAMC,aAAaC,mBAIhB,SAACC,GACxB,MAAO,CACHR,WAAY,SAACD,GACTS,EAAWC,YAAwBV,SAKhCG,CAGbpB","file":"static/js/3.107b0251.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2AfEL\",\"dialogsItems\":\"Dialogs_dialogsItems__2aUmB\",\"messages\":\"Dialogs_messages__1tZuv\",\"messagesRow\":\"Dialogs_messagesRow__gWE1b\",\"messagesCell1\":\"Dialogs_messagesCell1__gL8Gp\",\"messagesCell2\":\"Dialogs_messagesCell2__72Wdq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__BQH-u\",\"active\":\"DialogItem_active__-weKp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3K1h0\"};","import React from 'react';\r\nimport s from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype DialogItem = {\r\n    name: string,\r\n    id: number\r\n}\r\n\r\nfunction DialogItem(props: DialogItem) {\r\n    return (\r\n        <div className={`${s.dialog} ${s.active}`}>\r\n            <img src={\"https://greendestinations.org/wp-content/uploads/2019/05/avatar-exemple.jpg\"}/>\r\n            <NavLink to={'/dialogs/' + props.id}> {props.name} </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from 'react';\r\nimport s from './Message.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\ntype propsMessage = {\r\n    message: string\r\n}\r\n\r\nfunction Message(props: propsMessage) {\r\n    return (\r\n            <div className={s.message}>\r\n                {props.message}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react';\r\nimport {Field, reduxForm, SubmitHandler} from \"redux-form\";\r\nimport {MyTextarea} from \"../Common/FormControls/FormControls\";\r\nimport {maxLength, requiredField} from \"../../Utils/Validation/validators\";\r\n\r\ntype propsType = {\r\n    handleSubmit: SubmitHandler;\r\n}\r\n\r\nfunction AddMessageForm(props: propsType) {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={MyTextarea} name={\"newMessageBody\"} placeholder={\"Enter your message here\"}/>\r\n            </div>\r\n            <div>\r\n                <button> Add message </button>\r\n            </div>\r\n\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nexport const AddMessageReduxForm = reduxForm({\r\n    form: 'AddMessage'\r\n})(AddMessageForm)","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./MessageItem/Message\";\r\nimport {messagesPageType} from \"../../Redux/Types\";\r\nimport {AddMessageReduxForm} from \"./AddMessageForm\";\r\n\r\ntype propsType = {\r\n    messages: messagesPageType,\r\n    newMessageText: string,\r\n    updateNewMessageText: (newMessage: string) => void,\r\n    addMessage: (newMessageBody: string) => void,\r\n}\r\n\r\nfunction Dialogs(props: propsType) {\r\n    let dialogElements = props.messages.dialogsData.map((d: { name: string; id: number; }) => <DialogItem name={d.name}\r\n                                                                                                          id={d.id} key={d.id}/>)\r\n    let messageElementsLeft = props.messages.messagesDataLeft.map((m: { message: string; }) => <Message message={m.message}/>)\r\n    let messageElementsRight = props.messages.messagesDataRight.map((m: { message: string; }) => <Message message={m.message}/>)\r\n\r\n    const addMessage = (newMessageBody: string) => {\r\n        props.addMessage(newMessageBody)\r\n    }\r\n\r\n    const onSubmit = (values: any) => {\r\n        addMessage(values.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div className={s.messagesRow}>\r\n                    <div className={s.messagesCell1}>\r\n                        {messageElementsLeft}\r\n                        <AddMessageReduxForm onSubmit={onSubmit}/>\r\n                    </div>\r\n                    <div className={s.messagesCell2}>\r\n                        {messageElementsRight}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import React from 'react';\r\nimport {addMessageActionCreator} from \"../../Redux/messageReducer\";\r\nimport { _stateType} from \"../../Redux/Types\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state: _stateType) => {\r\n    return {\r\n        messages: state.messagesPage,\r\n        newMessageText: state.messagesPage.newMessageText,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        addMessage: (newMessageBody: string) => {\r\n            dispatch ( addMessageActionCreator(newMessageBody) )\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n)(Dialogs)"],"sourceRoot":""}